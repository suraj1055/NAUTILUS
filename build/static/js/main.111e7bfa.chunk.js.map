{"version":3,"sources":["components/sixstepstudy/CavityBalance.js","components/sixstepstudy/CosmeticPressure.js","components/sixstepstudy/CoolingTimeStudy.js","components/sixstepstudy/ColdRunner.js","components/common/header-component/header.js","actions/auth.js","actions/types.js","components/common/sidebar-component/menu.js","components/common/sidebar-component/sidebar.js","components/common/theme-customizer.js","components/common/loader.js","components/app.jsx","reducers/auth.js","reducers/index.js","store.js","components/common/breadcrumb.js","components/modals/Mold.js","components/dashboard/MoldGrid.js","components/modals/Session.js","components/dashboard/SessionGrid.js","components/modals/Viscocity.js","components/columns&rows/ViscocityAddRow.js","components/Grids/ViscocityEdit.js","components/Grids/ViscocityRead.js","components/Grids/ViscocityGrid.js","components/sixstepstudy/ViscocityCurve.js","components/columns&rows/CavityAddColumn.js","components/Grids/CavityEditRow.js","components/Grids/CavityReadRow.js","components/Grids/CavityGrid.js","components/Grids/CavityGrid2.js","components/data/cavity_balance_data.js","components/modals/CavityEdit.js","components/modals/Pressure.js","components/columns&rows/PressureAddRow.js","components/Grids/PressureEdit.js","components/Grids/PressureRead.js","components/Grids/PressureGrid.js","components/sixstepstudy/PressureDropStudy.js","components/Grids/CosmeticEdit.js","components/Grids/CosmeticRead.js","components/Grids/CosmeticGrid.js","components/modals/CosmeticEdit.js","components/columns&rows/CoolingAddColumn.js","components/columns&rows/CoolingAddRow.js","components/data/Cooling_data.js","components/Grids/CoolingEditRow.js","components/Grids/CoolingReadRow.js","components/Grids/CoolingGrid.js","components/modals/CoolingEdit.js","components/Grids/ColdEditRow.js","components/Grids/ColdReadRow.js","components/Grids/ColdGrid1.js","components/columns&rows/ColdAddColumn.js","components/columns&rows/ColdAddRow.js","components/data/Cold_runner.js","components/Grids/ColdGrid2.js","components/modals/ColdEdit.js","components/sixstepstudy/SixStepStudy.js","components/dashboard/Dashboard.js","pages/login.js","pages/signup.js","pages/resetPwd.js","pages/Activate.js","pages/ResetPwdConfirm.js","index.js"],"names":["chartInstance","connect","state","isAuthenticated","auth","logout","dispatch","a","type","useState","sidebar","setSidebar","className","href","onClick","document","querySelector","classList","remove","add","to","style","height","MENUITEMS","path","title","icon","Home","badgeType","active","translate","props","toggletNavActive","item","forEach","includes","children","b","c","color","id","map","menuItem","i","key","sidebartitle","t","opacity","transition","childrenItem","index","process","childrenSubItem","ThemeCustomizer","primary_color","localStorage","getItem","secondary_color","layout_version","sidebar_type","body_sidebar_type","useEffect","Loader","show","setShow","timeout","setTimeout","clearTimeout","checkAuthenticated","config","headers","body","JSON","stringify","token","axios","post","data","code","load_user","get","res","payload","initialState","access","refresh","user","alreadyExists","inValid","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Breadcrumb","breadcrumb","marginLeft","parent","Mold","toggle3","modal3","handleAddFormChange","handleAddFormSubmit","Button","Modal","isOpen","toggle","centered","ModalHeader","ModalBody","htmlFor","name","placeholder","onChange","ModalFooter","MoldGrid","MoldData","setMoldData","setShowGrid","setMold_Id","Mold_Id","Platen_Orientation","Number_Of_Bases","Is_This_A_New_Mold","Number_Of_Parts","editMoldData","setEditMoldData","isRowId","setIsRowId","handleSession","moldid","handleEditFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","deleteRow2","updatedRows","filter","autoComplete","Table","striped","bordered","hover","responsive","variant","onMouseOut","editedValue","newValues","findIndex","mold","moldId","formValues","setId","width","readOnly","Session","toggle2","modal2","handleAddFormChange2","handleAddFormSubmit2","setshowSixStep","setSession_Id","SessionData","setSessionData","setModal2","Session_Name","Date","editSessionData","setEditSessionData","session","sessionId","Viscocity","modal","ViscocityAddRow","addRow","increaseRow","edit","NewRow2","NewRow","rowId","editFormData","IntensificationRatio","Injection_Speed","Fill_Time","Peak_Inj_Press","Viscosity","Math","round","Shear_Rate","Number","toFixed","Read","ViscocityGrid","handleEditFormSubmit","handleClose","toolbarSettings","items","services","Toolbar","HtmlEditor","ViscocityCurve","Main_Data","setMain_Data","setModal","setNewRow2","row","setRow","row1","setIntensificationRatio","Injection_Speed_Units","setInjection_Speed_Units","Pressure_Units","setPressure_Units","setInjection_Speed","setEditFormData","minViscosity","setMinViscosity","maxViscosity","setMaxViscosity","Interval","setInterval","e","defaultValue","parseInt","push","nanoid","alert","Axios","then","Grid_Data","catch","err","console","log","length","primaryXAxis","valueType","primaryYAxis","minimum","maximum","interval","LineSeries","Category","DataLabel","dataSource","xName","yName","marker","dataLabel","visible","Cavity","addHeader","addColumn","CavityEditRow","key1","key2","autoFocus","CavityReadRow","CavityGrid","column","deleteColumn","setId2","delete","header","value2","Cavity_No","CavityGrid2","Total","setTotal","Average","setAverage","Range","setRange","MaxPart","setMaxPart","MinPart","setMinPart","Percentage","setPercentage","columnTotal","columnAverage","columnRange","columnMaxPart","columnMinPart","columnPercent","total","average","range","Range_Array","max","min","percent","compare","j","isNaN","parseFloat","Sorted_Array","sort","k","value1","undefined","data2","CavityEdit","editColumnHeader","editColumn","CavityBalance","setHeader","setColumn","toggleEdit","setToggleEdit","chartData","setChartData","isColumnId","setIsColumnId","newColumn","element","editCancel","series","updatedColumns","newObject","Object","assign","ref","chart","Pressure","allowEditing","allowPaging","pageSettings","pageSize","field","headerText","textAlign","DetailRow","Page","Edit","CommandColumn","PressureAddRow","Max_Press_Available","Flow_Area","Peak_Pressure","Percent_Maximum","PressureGrid","PressureDropStudy","setMax_Press_Available","Delta_P","Percent_Delta_P","Melt_Temp","Low","High","CosmeticGrid","Melting","Hydraulic","CosmeticEdit","setHeader1","setHeader2","CosmeticPressure","setMelting","setHydraulic","centerPoints","polygonData","x","y","Coordinates","Point","this","Region","points","prototype","area","point1","point2","centroid","f","region","center","ScatterSeries","margin","shape","CoolingAddColumn","CoolingAddRow","CoolingEditRow","CoolingReadRow","CoolingGrid","CoolingEdit","CoolingTimeStudy","setModal3","grid2","setGrid2","ColdEditRow","ColdReadRow","ColdGrid1","ColdAddColumn","ColdAddRow","ColdGrid2","ColdEdit","SixStepStudy","headertext","text","heightAdjustMode","content","ColdRunner","Session_Id","showGrid","showSixStep","addSessionData","setAddSessionData","addMoldData","setAddMoldData","newSession","newSessions","newMold","newMolds","login","email","password","show1","setShow1","showPassword","setShowPassword","formData","setFormData","role","data-dismiss","aria-label","aria-hidden","onSubmit","required","minLength","cursor","signup","re_password","show2","setShow2","showPassword2","setShowPassword2","resetPassword","verify","uid","match","params","resetPasswordConfirm","new_password","re_new_password","Root","basename","component","SignIn","Signup","ResetPwd","Activate","exact","ResetPwdConfirm","Dashboard","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.111e7bfa.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ChartComponent, LineSeries, Inject, SeriesCollectionDirective, SeriesDirective, Category, DataLabel } from '@syncfusion/ej2-react-charts';\r\nimport { Button } from 'reactstrap';\r\nimport Cavity from '../columns&rows/CavityAddColumn';\r\nimport CavityGrid from '../Grids/CavityGrid';\r\nimport { nanoid } from 'nanoid'\r\nimport CavityGrid2 from '../Grids/CavityGrid2';\r\nimport '../App.css';\r\nimport { HtmlEditor, RichTextEditorComponent, Toolbar } from '@syncfusion/ej2-react-richtexteditor';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { data, data2 } from '../data/cavity_balance_data';\r\nimport CavityEdit from '../modals/CavityEdit'\r\n\r\nexport let chartInstance;\r\n\r\nconst CavityBalance = () => {\r\n\r\n    const [modal, setModal] = useState();\r\n\r\n    const toggle = () => {\r\n\r\n        setModal(!modal);\r\n\r\n    }\r\n\r\n    const [modal2, setModal2] = useState();\r\n\r\n    const toggle2 = () => {\r\n\r\n        setModal2(!modal2);\r\n\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    let toolbarSettings = {\r\n        items: ['Bold', 'Italic', 'Underline', 'StrikeThrough',\r\n            'FontName', 'FontSize', 'FontColor', 'BackgroundColor',\r\n            'LowerCase', 'UpperCase', '|',\r\n            'Formats', 'Alignments', 'OrderedList', 'UnorderedList',\r\n            'Outdent', 'Indent', '|', 'Undo', 'Redo']\r\n    };\r\n\r\n    const [header, setHeader] = useState();\r\n    const [column, setColumn] = useState(data);\r\n    const [toggleEdit, setToggleEdit] = useState(true);\r\n    const [NewRow2, setNewRow2] = useState(data2);\r\n    const [chartData, setChartData] = useState([])\r\n    const [editFormData, setEditFormData] = useState();\r\n    const [isRowId, setIsRowId] = useState(null);\r\n    const [isColumnId, setIsColumnId] = useState(null);\r\n\r\n    const addHeader = (e) => {\r\n        e.preventDefault();\r\n        setHeader(e.target.value);\r\n    }\r\n\r\n    const addColumn = () => {\r\n        if (!header) {\r\n\r\n        }\r\n        else {\r\n            const newColumn = { id: nanoid(), \"header\": header, \"edit\": true, \"delete\": true }\r\n            setColumn([...column, newColumn]);\r\n            setHeader(\"\");\r\n        }\r\n    };\r\n\r\n    const editColumnHeader = () => {\r\n        if (header && !toggleEdit) {\r\n            setColumn(\r\n                column.map((element) => {\r\n                    if (element.id === isColumnId) {\r\n                        return { ...element, header: header }\r\n                    }\r\n                    return element;\r\n                })\r\n            )\r\n            setHeader(\"\");\r\n            setIsColumnId(null)\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    const deleteColumn = (id) => {\r\n        const updatedColumns = column.filter((index) => {\r\n            return index.id !== id;\r\n        })\r\n        setColumn(updatedColumns)\r\n    }\r\n\r\n    const editColumn = (id) => {\r\n        setIsColumnId(id)\r\n        setToggleEdit(false)\r\n    }\r\n\r\n    const editCancel = () => {\r\n        setIsColumnId(null)\r\n        setToggleEdit(true)\r\n    }\r\n\r\n    const handleEditFormChange = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...editFormData }\r\n        newFormData[fieldName] = fieldValue\r\n\r\n        setEditFormData(newFormData)\r\n    }\r\n\r\n    const handleEditFormSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const editedValue = { id: isRowId };\r\n\r\n        const newObject = Object.assign(editedValue, editFormData);\r\n\r\n        const newValues = [...NewRow2];\r\n\r\n        const index = NewRow2.findIndex((value) => value.id === isRowId);\r\n\r\n        newValues[index] = newObject;\r\n\r\n        setNewRow2(newValues);\r\n\r\n        setIsRowId(null);\r\n\r\n    }\r\n\r\n    const setId = (event, value) => {\r\n\r\n        event.preventDefault();\r\n\r\n        setIsRowId(value.id);\r\n\r\n        const formValues = Object.assign({}, value)\r\n\r\n        setEditFormData(formValues);\r\n\r\n    }\r\n\r\n\r\n    const setGraph = () => {\r\n        setChartData(column);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const handleChange = (e) => {\r\n            chartInstance.series[0].dataSource = NewRow2;\r\n            chartInstance.refresh();\r\n        }\r\n\r\n        handleChange()\r\n\r\n    }, [NewRow2])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid-chart-container\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"grid_container_btn\">\r\n                            <Cavity toggle2={toggle2} modal2={modal2} addHeader={addHeader} addColumn={addColumn} />\r\n                        </div>\r\n                        <div className=\"grid_container_btn\">\r\n                            <CavityEdit modal={modal} toggle={toggle} column={column} addHeader={addHeader} editColumnHeader={editColumnHeader} editCancel={editCancel} editColumn={editColumn} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='mt-3'>\r\n                        <Button color=\"fifth\" className=\"btn btn-sm mr-4\" type=\"button\"> Print </Button>\r\n                        <Button onClick={handleShow} color=\"primary\" className=\"btn btn-sm step-button2\" type=\"button\"> Comment </Button>\r\n                        <Modal isOpen={show} centered={true} >\r\n                            <ModalHeader toggle={handleClose}>\r\n                                Add Comment\r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                                <RichTextEditorComponent toolbarSettings={toolbarSettings} height={250}>\r\n\r\n                                    <Inject services={[Toolbar, HtmlEditor]} />\r\n                                </RichTextEditorComponent>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"primary\"> Save </Button>\r\n                                <Button color=\"dark\" onClick={handleClose}> Cancel </Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"mb-4\">\r\n                    <CavityGrid modal={modal} toggle={toggle} modal2={modal2} toggle2={toggle2} column={column} deleteColumn={deleteColumn} editColumn={editColumn} isColumnId={isColumnId} editCancel={editCancel} addHeader={addHeader} setHeader={setHeader} toggleEdit={toggleEdit} editColumnHeader={editColumnHeader} addColumn={addColumn} NewRow2={NewRow2} handleEditFormChange={handleEditFormChange} handleEditFormSubmit={handleEditFormSubmit} setId={setId} isRowId={isRowId} editFormData={editFormData} />\r\n                </div>\r\n                <div>\r\n                    <CavityGrid2 column={column} NewRow2={NewRow2} />\r\n                </div>\r\n            </div>\r\n            <div className=\"grid-chart-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 chart_container_btn\">\r\n                        <Button color=\"primary\" onClick={setGraph}> Show Graph </Button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <ChartComponent id='charts' ref={chart => chartInstance = chart} title=\"Cavity Chart Analysis\" primaryXAxis={{ valueType: \"Category\", title: \"Cavity ID\" }} primaryYAxis={{ title: \"Part Weight\" }}>\r\n                        <Inject services={[LineSeries, Category, DataLabel]} />\r\n                        <SeriesCollectionDirective>\r\n\r\n                            {chartData.map((value, key) => (\r\n                                <SeriesDirective type=\"Line\" dataSource={NewRow2} xName=\"Cavity_No\" yName={`value${key}`} marker={{ dataLabel: { visible: true }, visible: true }} ></SeriesDirective>\r\n                            ))}\r\n\r\n                        </SeriesCollectionDirective>\r\n                    </ChartComponent>\r\n                </div>\r\n            </div>\r\n            <div className=\"row save_saveas_btn\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"text-right\">\r\n                        <Button color=\"third\" className=\"btn-save-chart\"> Save </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CavityBalance;","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    ChartComponent, LineSeries, Inject, SeriesCollectionDirective, ScatterSeries, Category, DataLabel, SeriesDirective\r\n} from '@syncfusion/ej2-react-charts';\r\nimport { Button } from 'reactstrap';\r\nimport CosmeticGrid from '../Grids/CosmeticGrid';\r\nimport CosmeticEdit from '../modals/CosmeticEdit';\r\nimport data from '../data/Cosmetic_data.json';\r\n\r\nexport let chartInstance;\r\n\r\nconst CosmeticPressure = () => {\r\n\r\n    const [modal, setModal] = useState();\r\n    const [Melting, setMelting] = useState(\"Melt Temp\");\r\n    const [Hydraulic, setHydraulic] = useState(\"Hydraulic\");\r\n    const [NewRow2, setNewRow2] = useState(data);\r\n\r\n    var centerPoints = [];\r\n    const [chartData, setChartData] = useState([]);\r\n    const [editFormData, setEditFormData] = useState({\r\n        Melt_Temp: \"\",\r\n        Low: \"\",\r\n        High: \"\"\r\n    });\r\n\r\n    const [isRowId, setIsRowId] = useState(null)\r\n\r\n    const handleEditFormChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...editFormData };\r\n        newFormData[fieldName] = fieldValue;\r\n\r\n        setEditFormData(newFormData);\r\n\r\n    }\r\n\r\n    const handleEditFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const editedValue = {\r\n            id: isRowId,\r\n            Melt_Temp: editFormData.Melt_Temp,\r\n            Low: editFormData.Low,\r\n            High: editFormData.High\r\n        }\r\n\r\n        const newValues = [...NewRow2];\r\n\r\n        const index = NewRow2.findIndex((value) => value.id === isRowId)\r\n\r\n        newValues[index] = editedValue;\r\n\r\n        setNewRow2(newValues);\r\n\r\n        setIsRowId(null);\r\n    }\r\n\r\n    const setId = (event, NewRow) => {\r\n\r\n        event.preventDefault();\r\n\r\n        setIsRowId(NewRow.id);\r\n\r\n        const formValues = {\r\n            Melt_Temp: NewRow.Melt_Temp,\r\n            Low: NewRow.Low,\r\n            High: NewRow.High,\r\n        }\r\n\r\n        setEditFormData(formValues);\r\n    }\r\n\r\n    const toggle = () => {\r\n        setModal(!modal)\r\n    }\r\n\r\n    const setHeader1 = (e) => {\r\n        e.preventDefault();\r\n        setMelting(e.target.value)\r\n    }\r\n\r\n    const setHeader2 = (e) => {\r\n        e.preventDefault();\r\n        setHydraulic(e.target.value)\r\n    }\r\n\r\n    // Create an object which will be used to plot the polygon\r\n    const polygonData = [\r\n        { x: parseFloat(NewRow2[0][\"Melt_Temp\"]), y: parseFloat(NewRow2[0][\"Low\"]) },\r\n        { x: parseFloat(NewRow2[1][\"Melt_Temp\"]), y: parseFloat(NewRow2[1][\"Low\"]) },\r\n        { x: parseFloat(NewRow2[1][\"Melt_Temp\"]), y: parseFloat(NewRow2[1][\"High\"]) },\r\n        { x: parseFloat(NewRow2[0][\"Melt_Temp\"]), y: parseFloat(NewRow2[0][\"High\"]) },\r\n        { x: parseFloat(NewRow2[0][\"Melt_Temp\"]), y: parseFloat(NewRow2[0][\"Low\"]) }\r\n    ]\r\n\r\n    var Coordinates = [\r\n        { x: parseFloat(NewRow2[0][\"Melt_Temp\"]), y: parseFloat(NewRow2[0][\"Low\"]) },\r\n        { x: parseFloat(NewRow2[1][\"Melt_Temp\"]), y: parseFloat(NewRow2[1][\"Low\"]) },\r\n        { x: parseFloat(NewRow2[1][\"Melt_Temp\"]), y: parseFloat(NewRow2[1][\"High\"]) },\r\n        { x: parseFloat(NewRow2[0][\"Melt_Temp\"]), y: parseFloat(NewRow2[0][\"High\"]) },\r\n        { x: parseFloat(NewRow2[0][\"Melt_Temp\"]), y: parseFloat(NewRow2[0][\"Low\"]) }\r\n    ]\r\n\r\n    const setGraph = () => {\r\n\r\n        setChartData(polygonData)\r\n    }\r\n\r\n    // Event to calculate the centroid\r\n    function center(Coordinates) {\r\n\r\n        function Point(x, y) {\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n\r\n        function Region(points) {\r\n            this.points = points || [];\r\n            this.length = points.length;\r\n        }\r\n\r\n        Region.prototype.area = function () {\r\n            var area = 0,\r\n                i,\r\n                j,\r\n                point1,\r\n                point2;\r\n\r\n            for (i = 0, j = this.length - 1; i < this.length; j = i, i++) {\r\n                point1 = this.points[i];\r\n                point2 = this.points[j];\r\n                area += point1.x * point2.y;\r\n                area -= point1.y * point2.x;\r\n            }\r\n            area /= 2;\r\n\r\n            return area;\r\n        };\r\n\r\n        Region.prototype.centroid = function () {\r\n            var x = 0,\r\n                y = 0,\r\n                i,\r\n                j,\r\n                f,\r\n                point1,\r\n                point2;\r\n\r\n            for (i = 0, j = this.length - 1; i < this.length; j = i, i++) {\r\n                point1 = this.points[i];\r\n                point2 = this.points[j];\r\n                f = point1.x * point2.y - point2.x * point1.y;\r\n                x += (point1.x + point2.x) * f;\r\n                y += (point1.y + point2.y) * f;\r\n            }\r\n\r\n            f = this.area() * 6;\r\n\r\n            return new Point(Number(x / f).toFixed(0), Number(y / f).toFixed(1));\r\n        };\r\n\r\n        var polygon = Coordinates,\r\n            region = new Region(polygon);\r\n\r\n        centerPoints.push(region.centroid())\r\n    }\r\n\r\n    center(Coordinates);\r\n\r\n    useEffect(() => {\r\n\r\n        const handleChange = (e) => {\r\n          chartInstance.refresh();\r\n        }\r\n    \r\n        handleChange()\r\n    \r\n      }, [])\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"grid-chart-container\">\r\n                <div className=\"form-group\">\r\n                    <CosmeticEdit toggle={toggle} modal={modal} setHeader1={setHeader1} setHeader2={setHeader2} Melting={Melting} Hydraulic={Hydraulic} />\r\n                </div>\r\n                <div>\r\n                    <CosmeticGrid Melting={Melting} Hydraulic={Hydraulic} NewRow2={NewRow2} setId={setId} handleEditFormChange={handleEditFormChange} handleEditFormSubmit={handleEditFormSubmit} isRowId={isRowId} editFormData={editFormData} />\r\n                </div>\r\n            </div>\r\n            <div className=\"grid-chart-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 chart_container_btn\">\r\n                        <Button color=\"primary\" onClick={setGraph}> Show Graph </Button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <ChartComponent id='charts' ref={chart => chartInstance = chart} title=\"Cosmetic Process Study\" width=\"1100\" primaryXAxis={{ title: `${Melting}` }} primaryYAxis={{ title: `${Hydraulic}` }}>\r\n\r\n                        <Inject services={[LineSeries, Category, DataLabel, ScatterSeries]} />\r\n\r\n                        <SeriesCollectionDirective>\r\n\r\n                            <SeriesDirective type=\"Line\" dataSource={chartData} xName=\"x\" yName=\"y\" marker={{ visible: true, margin: 100 }} ></SeriesDirective>\r\n\r\n                            <SeriesDirective\r\n                                dataSource={centerPoints}\r\n                                xName=\"x\"\r\n                                yName=\"y\"\r\n                                width={2}\r\n                                marker={{\r\n                                    dataLabel: { visible: true },\r\n                                    shape: 'Diamond',\r\n                                    visible: true,\r\n                                    width: 10,\r\n                                    height: 10,\r\n                                }}\r\n                                type=\"Scatter\"\r\n                            ></SeriesDirective>\r\n\r\n                        </SeriesCollectionDirective>\r\n\r\n                    </ChartComponent>\r\n                </div>\r\n            </div>\r\n            <div className=\"row save_saveas_btn\">\r\n                <div className=\"col-md-12 text-right\">\r\n                    <Button color=\"third\" className=\"btn-save-chart\"> Save </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CosmeticPressure;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ChartComponent, LineSeries, SeriesCollectionDirective, SeriesDirective, Category, DataLabel } from '@syncfusion/ej2-react-charts';\r\nimport { Button } from 'reactstrap';\r\nimport CoolingAddColumn from '../columns&rows/CoolingAddColumn';\r\nimport CoolingAddRow from '../columns&rows/CoolingAddRow';\r\nimport { nanoid } from 'nanoid';\r\nimport { data, data2 } from '../data/Cooling_data'\r\nimport CoolingGrid from '../Grids/CoolingGrid';\r\nimport { HtmlEditor, Inject, RichTextEditorComponent, Toolbar } from '@syncfusion/ej2-react-richtexteditor';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport '../App.css';\r\nimport CoolingEdit from '../modals/CoolingEdit'\r\n\r\nexport let chartInstance;\r\n\r\nconst CoolingTimeStudy = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    let toolbarSettings = {\r\n        items: ['Bold', 'Italic', 'Underline', 'StrikeThrough',\r\n            'FontName', 'FontSize', 'FontColor', 'BackgroundColor',\r\n            'LowerCase', 'UpperCase', '|',\r\n            'Formats', 'Alignments', 'OrderedList', 'UnorderedList',\r\n            'Outdent', 'Indent', '|', 'Undo', 'Redo']\r\n    };\r\n\r\n    const [modal, setModal] = useState();\r\n\r\n    const toggle = () => {\r\n\r\n        setModal(!modal);\r\n\r\n    }\r\n\r\n    const [modal2, setModal2] = useState();\r\n\r\n    const toggle2 = () => {\r\n        setModal2(!modal2);\r\n    }\r\n\r\n    const [modal3, setModal3] = useState();\r\n\r\n    const toggle3 = () => {\r\n        setModal3(!modal3);\r\n    }\r\n\r\n    // ************ Functions to deal with column ************\r\n\r\n    const [header, setHeader] = useState();\r\n    const [column, setColumn] = useState(data);\r\n    const [isColumnId, setIsColumnId] = useState(null);\r\n    const [toggleEdit, setToggleEdit] = useState(true);\r\n    const [grid2, setGrid2] = useState(\"\");\r\n    // const [chartData, setChartData] = useState()\r\n    const [editFormData, setEditFormData] = useState()\r\n    const [isRowId, setIsRowId] = useState(null)\r\n\r\n\r\n    const addHeader = (e) => {\r\n        e.preventDefault();\r\n        setHeader(e.target.value)\r\n    }\r\n\r\n    const addColumn = () => {\r\n        if (!header) {\r\n\r\n        }\r\n        else {\r\n            const newColumn = { id: nanoid(), header: header }\r\n            setColumn([...column, newColumn]);\r\n            console.log(newColumn)\r\n            setHeader(\"\");\r\n        }\r\n    };\r\n\r\n    const editColumnHeader = () => {\r\n        if (header && !toggleEdit) {\r\n            setColumn(\r\n                column.map((element) => {\r\n                    if (element.id === isColumnId) {\r\n                        return { ...element, header: header }\r\n                    }\r\n                    return element;\r\n                })\r\n            )\r\n            setHeader(\"\");\r\n            setIsColumnId(null)\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    const handleEditFormChange = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...editFormData }\r\n        newFormData[fieldName] = fieldValue\r\n\r\n        setEditFormData(newFormData)\r\n    }\r\n\r\n    const handleEditFormSubmit = (event) => {\r\n\r\n        event.preventDefault()\r\n\r\n        const editedValue = { id: isRowId }\r\n\r\n        const newObject = Object.assign(editedValue, editFormData);\r\n\r\n        const newValues = [...NewRow2];\r\n\r\n        const index = NewRow2.findIndex((value) => value.id === isRowId);\r\n\r\n        newValues[index] = newObject;\r\n\r\n        setNewRow2(newValues);\r\n\r\n        setIsRowId(null);\r\n\r\n    }\r\n\r\n    const setId = (event, value) => {\r\n\r\n        event.preventDefault();\r\n\r\n        setIsRowId(value.id);\r\n\r\n        const formValues = Object.assign({}, value)\r\n\r\n        setEditFormData(formValues);\r\n\r\n    }\r\n\r\n    const setGraph = () => {\r\n        console.log(NewRow2)\r\n    }\r\n\r\n    const deleteColumn = (id) => {\r\n        const updatedColumns = column.filter((index) => {\r\n            return index.id !== id;\r\n        })\r\n        setColumn(updatedColumns)\r\n    }\r\n\r\n    const editColumn = (id) => {\r\n        setIsColumnId(id)\r\n        setToggleEdit(false)\r\n    }\r\n\r\n    const editCancel = () => {\r\n        setIsColumnId(null)\r\n        setToggleEdit(true)\r\n    }\r\n\r\n    // ************ Functions to deal with row ***************\r\n\r\n    const row1 = [];\r\n    const [row, setRow] = useState();\r\n    const [NewRow2, setNewRow2] = useState(data2);\r\n\r\n    const addRow = (e) => {\r\n        e.preventDefault();\r\n        setRow(e.target.value)\r\n    }\r\n\r\n    const increaseRow = () => {\r\n        for (let i = 0; i < parseInt(row); i++) {\r\n            row1.push({\r\n                id: nanoid(),\r\n                \"edit\": true,\r\n                \"delete\": true\r\n            })\r\n        }\r\n        setNewRow2([...NewRow2, ...row1]);\r\n    };\r\n\r\n    const deleteRow2 = (id) => {\r\n        const updatedRows = [...NewRow2].filter((value) => {\r\n            return value.id !== id;\r\n        });\r\n        setNewRow2(updatedRows);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const handleChange = (e) => {\r\n            chartInstance.series[0].dataSource = NewRow2;\r\n            chartInstance.refresh();\r\n        }\r\n\r\n        handleChange()\r\n\r\n       }, [NewRow2])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid-chart-container\">\r\n                <div className=\"d-flex justify-content-between mb-4\">\r\n                    <div className=\"d-flex\">\r\n                        <div>\r\n                            <CoolingAddColumn modal={modal} toggle={toggle} addColumn={addColumn} addHeader={addHeader} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <CoolingAddRow modal2={modal2} toggle2={toggle2} addRow={addRow} increaseRow={increaseRow} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <CoolingEdit modal3={modal3} toggle3={toggle3} column={column} addHeader={addHeader} editColumnHeader={editColumnHeader} editCancel={editCancel} editColumn={editColumn} />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Button color=\"fifth\" className=\"btn btn-sm mr-4\" type=\"button\"> Print </Button>\r\n                        <Button onClick={handleShow} color=\"primary\" className=\"btn btn-sm step-button2\" type=\"button\"> Comment </Button>\r\n                        <Modal isOpen={show} centered={true} >\r\n                            <ModalHeader toggle={handleClose}>\r\n                                Add Comment\r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                                <RichTextEditorComponent toolbarSettings={toolbarSettings} height={250}>\r\n\r\n                                    <Inject services={[Toolbar, HtmlEditor]} />\r\n                                </RichTextEditorComponent>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"primary\"> Save </Button>\r\n                                <Button color=\"dark\" onClick={handleClose}> Cancel </Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <CoolingGrid modal={modal} toggle={toggle} modal2={modal2} toggle2={toggle2} column={column} deleteColumn={deleteColumn} editColumn={editColumn} isColumnId={isColumnId} editCancel={editCancel} addHeader={addHeader} setHeader={setHeader} toggleEdit={toggleEdit} editColumnHeader={editColumnHeader} addColumn={addColumn} NewRow2={NewRow2} deleteRow2={deleteRow2} handleEditFormChange={handleEditFormChange} handleEditFormSubmit={handleEditFormSubmit} setId={setId} isRowId={isRowId} editFormData={editFormData} />\r\n                </div>\r\n            </div>\r\n            <div className=\"grid-chart-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleFormControlSelect30\" className=\"lbl_design\"> X-Axis: </label>\r\n                            <select className=\"form-control digits\" onClick={(e) => setGrid2(e.target.value)}>\r\n                                {column.map((value, key) => (\r\n                                    <>\r\n                                        {value.id === 0 ? '-' : <option> {value.header} </option>}\r\n                                    </>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 mt-4\">\r\n                        <Button color=\"primary\" onClick={setGraph}> Calculate & Show Graph </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <ChartComponent id='charts' ref={chart => chartInstance = chart} title=\"Cold Runner\" primaryXAxis={{ valueType: \"Category\", title: \"Cooling Time Study\" }} primaryYAxis={{ title: `${grid2}` }}>\r\n                        <Inject services={[LineSeries, Category, DataLabel]} />\r\n                        <SeriesCollectionDirective>\r\n\r\n                            {/* NewRow2 is the name of the Array which contains our data and again grid2 will be varying */}\r\n                            <SeriesDirective type=\"Line\" dataSource={NewRow2} xName=\"Cooling Time Study\" yName={grid2} marker={{ dataLabel: { visible: true }, visible: true }}></SeriesDirective>\r\n\r\n                        </SeriesCollectionDirective>\r\n\r\n                    </ChartComponent>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row save_saveas_btn\">\r\n                <div className=\"col-md-12 text-right\">\r\n                    <Button color=\"third\" className=\"btn-save-chart\"> Save </Button>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default CoolingTimeStudy;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { ChartComponent, LineSeries, SeriesCollectionDirective, SeriesDirective, Category, DataLabel } from '@syncfusion/ej2-react-charts';\r\nimport { Button } from 'reactstrap';\r\nimport ColdGrid1 from '../Grids/ColdGrid1';\r\nimport { nanoid } from 'nanoid';\r\nimport ColdAddColumn from '../columns&rows/ColdAddColumn';\r\nimport ColdAddRow from '../columns&rows/ColdAddRow';\r\nimport { data, data2 } from '../data/Cold_runner';\r\nimport ColdGrid2 from '../Grids/ColdGrid2';\r\nimport { HtmlEditor, Inject, RichTextEditorComponent, Toolbar } from '@syncfusion/ej2-react-richtexteditor';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport '../App.css';\r\nimport ColdEdit from '../modals/ColdEdit'\r\n\r\nexport let chartInstance;\r\n\r\nconst CavityBalance = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    let toolbarSettings = {\r\n        items: ['Bold', 'Italic', 'Underline', 'StrikeThrough',\r\n            'FontName', 'FontSize', 'FontColor', 'BackgroundColor',\r\n            'LowerCase', 'UpperCase', '|',\r\n            'Formats', 'Alignments', 'OrderedList', 'UnorderedList',\r\n            'Outdent', 'Indent', '|', 'Undo', 'Redo']\r\n    };\r\n\r\n    const [modal, setModal] = useState();\r\n\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n    }\r\n\r\n    const [modal2, setModal2] = useState();\r\n\r\n    const toggle2 = () => {\r\n        setModal2(!modal2);\r\n    }\r\n\r\n    const [modal3, setModal3] = useState();\r\n\r\n    const toggle3 = () => {\r\n        setModal3(!modal3);\r\n    }\r\n\r\n    // ************ Functions to deal with column ************\r\n\r\n    const [header, setHeader] = useState();\r\n    const [column, setColumn] = useState(data);\r\n    const [isColumnId, setIsColumnId] = useState(null);\r\n    const [toggleEdit, setToggleEdit] = useState(true);\r\n    const [grid2, setGrid2] = useState(\"\");\r\n    const [editFormData, setEditFormData] = useState()\r\n    const [isRowId, setIsRowId] = useState(null)\r\n\r\n    const addHeader = (e) => {\r\n        e.preventDefault();\r\n        setHeader(e.target.value)\r\n    }\r\n\r\n    const addColumn = () => {\r\n        if (!header) {\r\n\r\n        }\r\n        else {\r\n            const newColumn = { id: nanoid(), header: header }\r\n            setColumn([...column, newColumn]);\r\n            setHeader(\"\");\r\n        }\r\n    };\r\n\r\n    const editColumnHeader = () => {\r\n        if (header && !toggleEdit) {\r\n            setColumn(column.map((element) => {\r\n                if (element.id === isColumnId) {\r\n                    return { ...element, header: header }\r\n                }\r\n                return element;\r\n            })\r\n            )\r\n            setHeader(\"\");\r\n            setIsColumnId(null)\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    const handleEditFormChange = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...editFormData }\r\n        newFormData[fieldName] = fieldValue\r\n\r\n        setEditFormData(newFormData)\r\n\r\n    }\r\n\r\n    const handleEditFormSubmit = (event) => {\r\n\r\n        event.preventDefault()\r\n\r\n        const editedValue = { id: isRowId }\r\n\r\n        const newObject = Object.assign(editedValue, editFormData);\r\n\r\n        const newValues = [...NewRow2];\r\n\r\n        const index = NewRow2.findIndex((value) => value.id === isRowId);\r\n\r\n        newValues[index] = newObject;\r\n\r\n        setNewRow2(newValues);\r\n\r\n        setIsRowId(null);\r\n    }\r\n\r\n    const setId = (event, value) => {\r\n\r\n        event.preventDefault();\r\n\r\n        setIsRowId(value.id);\r\n\r\n        const formValues = Object.assign({}, value)\r\n\r\n        setEditFormData(formValues);\r\n\r\n    }\r\n\r\n    const deleteColumn = (id) => {\r\n        const updatedColumns = column.filter((index) => {\r\n            return index.id !== id;\r\n        })\r\n        setColumn(updatedColumns)\r\n    }\r\n\r\n    const editColumn = (id) => {\r\n        setIsColumnId(id)\r\n        setToggleEdit(false)\r\n    }\r\n\r\n    const editCancel = () => {\r\n        setIsColumnId(null)\r\n        setToggleEdit(true)\r\n    }\r\n\r\n\r\n    // ************ Functions to deal with row ***************\r\n\r\n    const row1 = [];\r\n    const [row, setRow] = useState();\r\n    const [NewRow2, setNewRow2] = useState(data2);\r\n\r\n    const addRow = (e) => {\r\n        e.preventDefault();\r\n        setRow(e.target.value)\r\n    }\r\n\r\n    const increaseRow = () => {\r\n        for (let i = 0; i < parseInt(row); i++) {\r\n            row1.push({\r\n                id: nanoid(),\r\n                \"edit\": true,\r\n                \"delete\": true\r\n            })\r\n        }\r\n        setNewRow2([...NewRow2, ...row1]);\r\n    };\r\n\r\n    const deleteRow2 = (id) => {\r\n        const updatedRows = [...NewRow2].filter((value) => {\r\n            return value.id !== id;\r\n        });\r\n        setNewRow2(updatedRows);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const handleChange = (e) => {\r\n            chartInstance.series[0].dataSource = NewRow2;\r\n            chartInstance.refresh();\r\n        }\r\n\r\n        handleChange()\r\n\r\n       }, [NewRow2])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"grid-chart-container\">\r\n                <div className=\"d-flex justify-content-between mb-4\">\r\n                    <div className=\"d-flex\" >\r\n                        <div >\r\n                            <ColdAddColumn modal={modal} toggle={toggle} addColumn={addColumn} addHeader={addHeader} />\r\n                        </div>\r\n                        <div>\r\n                            <ColdAddRow modal2={modal2} toggle2={toggle2} addRow={addRow} increaseRow={increaseRow} />\r\n                        </div>\r\n                        <div>\r\n                            <ColdEdit modal3={modal3} toggle3={toggle3} column={column} addHeader={addHeader} editColumnHeader={editColumnHeader} editCancel={editCancel} editColumn={editColumn} />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Button color=\"fifth\" className=\"btn btn-sm mr-4\" type=\"button\"> Print </Button>\r\n                        <Button onClick={handleShow} color=\"primary\" className=\"btn btn-sm step-button2\" type=\"button\"> Comment </Button>\r\n                        <Modal isOpen={show} centered={true} >\r\n                            <ModalHeader toggle={handleClose}>\r\n                                Add Comment\r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                                <RichTextEditorComponent toolbarSettings={toolbarSettings} height={250}>\r\n\r\n                                    <Inject services={[Toolbar, HtmlEditor]} />\r\n                                </RichTextEditorComponent>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"primary\"> Save </Button>\r\n                                <Button color=\"dark\" onClick={handleClose}> Cancel </Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"mb-2\">\r\n                        {/* Grid 1 */}\r\n\r\n                        <ColdGrid1 modal={modal} toggle={toggle} modal2={modal2} toggle2={toggle2} column={column} deleteColumn={deleteColumn} editColumn={editColumn} isColumnId={isColumnId} editCancel={editCancel} addHeader={addHeader} setHeader={setHeader} toggleEdit={toggleEdit} editColumnHeader={editColumnHeader} addColumn={addColumn} NewRow2={NewRow2} deleteRow2={deleteRow2} handleEditFormChange={handleEditFormChange} handleEditFormSubmit={handleEditFormSubmit} setId={setId} isRowId={isRowId} editFormData={editFormData} />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"grid-chart-container\">\r\n                <div className=\"row mb-4\">\r\n                    <div className=\"col-md-4 chart_container_btn\">\r\n                        <select className=\"form-control digits\" onClick={(e) => setGrid2(e.target.value)}>\r\n                            {column.map((value, key) => (\r\n                                <>\r\n                                    {value.id === 0 ? '-' : <option> {value.header} </option>}\r\n                                </>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"cold-runner-grid\">\r\n                    <div className=\"cold-grid\">\r\n                        {/* Grid 2 */}\r\n                        <ColdGrid2 column={column} NewRow2={NewRow2} grid2={grid2} />\r\n                    </div>\r\n                    <div className=\"cold-chart\">\r\n                        <ChartComponent id='charts' ref={chart => chartInstance = chart} title=\"Cold Runner\" primaryXAxis={{ valueType: \"Category\", title: \"Time\" }} primaryYAxis={{ title: `${grid2}` }}>\r\n                            <Inject services={[LineSeries, Category, DataLabel]} />\r\n                            <SeriesCollectionDirective>\r\n\r\n                                {/* NewRow2 is the name of the Array which contains our data and again grid2 will be varying */}\r\n                                <SeriesDirective type=\"Line\" dataSource={NewRow2} xName=\"Time\" yName={grid2} marker={{ dataLabel: { visible: true }, visible: true }}></SeriesDirective>\r\n\r\n                            </SeriesCollectionDirective>\r\n\r\n                        </ChartComponent>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 text-right mb-4\">\r\n                    <Button color=\"third\" className=\"btn-save-chart\"> Save </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CavityBalance;","import React, { useState, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AlignLeft, LogOut } from 'react-feather';\r\nimport '../../../assets/custom-stylesheet/header_style.css';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../../actions/auth';\r\n\r\nconst Header = ({ logout }) => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n  \r\n  const openCloseSidebar = () => {\r\n    if (sidebar) {\r\n      setSidebar(!sidebar)\r\n      document.querySelector(\".page-main-header\").classList.remove('open');\r\n      document.querySelector(\".page-sidebar\").classList.remove('open');\r\n    } else {\r\n      setSidebar(!sidebar)\r\n      document.querySelector(\".page-main-header\").classList.add('open');\r\n      document.querySelector(\".page-sidebar\").classList.add('open');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"page-main-header\" >\r\n        <div className=\"main-header-right row\">\r\n          <div className=\"main-header-left d-lg-none\">\r\n            <div className=\"logo-wrapper\">\r\n\r\n\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"d-block\">\r\n            <div className=\"media-body text-right switch-sm\">\r\n              <label className=\"switch\">\r\n                <a href=\"#javascript\" onClick={() => openCloseSidebar()}>\r\n                  <AlignLeft />\r\n                </a>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"nav-right col p-0\">\r\n            <div className=\"pull-right mt-2\">\r\n              <Link to=\"/login\">\r\n                <LogOut style={{ height: '18px' }} onClick={logout} />\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);","import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNIN_SUCCESS,\r\n    SIGNIN_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL\r\n} from './types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                })\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                })\r\n            }\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            })\r\n        }\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n        // dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const signup = (name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNIN_FAIL\r\n        })\r\n    }\r\n\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetPassword = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        })\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetPasswordConfirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({uid, token, new_password, re_new_password});\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        })\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n}; ","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNIN_SUCCESS = 'SIGNIN_SUCCESS';\r\nexport const SIGNIN_FAIL = 'SIGNIN_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\n","import {\r\n    Home\r\n} from 'react-feather';\r\n\r\nexport const MENUITEMS = [\r\n    {\r\n        path:'/dashboard/mold', title: 'Dashboard', icon: Home, type: 'link', badgeType: 'primary', active: false\r\n    }\r\n\r\n]\r\n","import React, { Fragment } from 'react';\r\nimport { MENUITEMS } from '../../../components/common/sidebar-component/menu';\r\nimport { Link } from 'react-router-dom';\r\nimport { translate } from 'react-switch-lang';\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    const toggletNavActive = (item) => {\r\n        if (!item.active) {\r\n            MENUITEMS.forEach(a => {\r\n                if (MENUITEMS.includes(item))\r\n                    a.active = false\r\n                if (!a.children) return false\r\n                a.children.forEach(b => {\r\n                    if (a.children.includes(item)) {\r\n                        b.active = false\r\n                    }\r\n                    if (!b.children) return false\r\n                    b.children.forEach(c => {\r\n                        if (b.children.includes(item)) {\r\n                            c.active = false\r\n                        }\r\n                    })\r\n                })\r\n            });\r\n        }\r\n        item.active = !item.active\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"page-sidebar\">\r\n                <div className=\"main-header-left d-none d-lg-block\">\r\n                    <div>\r\n                            <h3 style={{ color: '#fff' }}> NAUTILUS </h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"sidebar custom-scrollbar\">\r\n                    <ul\r\n                        className=\"sidebar-menu\"\r\n                        id=\"myDIV\"\r\n                    >\r\n                        {\r\n                            MENUITEMS.map((menuItem, i) =>\r\n                                <li className={`${menuItem.active ? 'active' : ''}`} key={i}>\r\n                                    {(menuItem.sidebartitle) ?\r\n                                        <div className=\"sidebar-title\">{menuItem.sidebartitle}</div>\r\n                                        : ''}\r\n                                    {(menuItem.type === 'sub') ?\r\n                                        <a className=\"sidebar-header\" href=\"#javascript\" onClick={() => toggletNavActive(menuItem)}>\r\n                                            <menuItem.icon />\r\n                                            <span>{props.t(menuItem.title)}</span>\r\n                                        </a>\r\n                                        : ''}\r\n                                    {(menuItem.type === 'link') ?\r\n                                        <Link\r\n                                            to={`${menuItem.path}`}\r\n                                            className={`sidebar-header ${menuItem.active ? 'active' : ''}`}\r\n\r\n                                            onClick={() => toggletNavActive(menuItem)}\r\n                                        >\r\n                                            <menuItem.icon /><span>{props.t(menuItem.title)}</span>\r\n                                            {menuItem.children ?\r\n                                                <i className=\"fa fa-angle-right pull-right\"></i> : ''}\r\n                                        </Link>\r\n                                        : ''}\r\n                                    {menuItem.children ?\r\n                                        <ul\r\n                                            className={`sidebar-submenu ${menuItem.active ? 'menu-open' : ''}`}\r\n                                            style={menuItem.active ? { opacity: 1, transition: 'opacity 500ms ease-in' } : {}}\r\n                                        >\r\n                                            {menuItem.children.map((childrenItem, index) =>\r\n                                                <li key={index} className={childrenItem.children ? childrenItem.active ? 'active' : '' : ''}>\r\n                                                    {(childrenItem.type === 'sub') ?\r\n                                                        <a href=\"#javascript\" onClick={() => toggletNavActive(childrenItem)} >\r\n                                                            <i className=\"fa fa-circle\"></i>{props.t(childrenItem.title)} <i className=\"fa fa-angle-right pull-right\"></i></a>\r\n                                                        : ''}\r\n\r\n                                                    {(childrenItem.type === 'link') ?\r\n                                                        <Link\r\n                                                            to={`${process.env.PUBLIC_URL}${childrenItem.path}`}\r\n                                                            className={childrenItem.active ? 'active' : ''}\r\n                                                            onClick={() => toggletNavActive(childrenItem)}\r\n                                                        >\r\n                                                            <i className=\"fa fa-circle\"></i>{props.t(childrenItem.title)} </Link>\r\n                                                        : ''}\r\n                                                    {childrenItem.children ?\r\n                                                        <ul className={`sidebar-submenu ${childrenItem.active ? 'menu-open' : 'active'}`}>\r\n                                                            {childrenItem.children.map((childrenSubItem, key) =>\r\n                                                                <li className={childrenSubItem.active ? 'active' : ''} key={key}>\r\n                                                                    {(childrenSubItem.type === 'link') ?\r\n                                                                        <Link\r\n                                                                            to={`${process.env.PUBLIC_URL}${childrenSubItem.path}`}\r\n                                                                            className={childrenSubItem.active ? 'active' : ''}\r\n                                                                            onClick={() => toggletNavActive(childrenSubItem)}\r\n                                                                        >\r\n                                                                            <i className=\"fa fa-circle\"></i>{props.t(childrenSubItem.title)}</Link>\r\n                                                                        : ''}\r\n                                                                </li>\r\n                                                            )}\r\n                                                        </ul>\r\n                                                        : ''}\r\n                                                </li>\r\n                                            )}\r\n                                        </ul>\r\n                                        : ''}\r\n                                </li>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default translate(Sidebar);\r\n\r\n","import React, { Fragment, useEffect } from 'react';\r\n\r\nconst ThemeCustomizer = () => {\r\n\r\n    const primary_color = localStorage.getItem('primary_color');\r\n    const secondary_color = localStorage.getItem('secondary_color');\r\n    const layout_version = localStorage.getItem('layout_version');\r\n    const sidebar_type = localStorage.getItem('wrapper')\r\n    const body_sidebar_type = localStorage.getItem('bodyWrapper');\r\n    const color = localStorage.getItem('color')\r\n\r\n    useEffect(() => {\r\n\r\n        //set sidebar wrapper\r\n        if(sidebar_type === null && body_sidebar_type === null){\r\n            \r\n        }else{\r\n            document.querySelector(\".page-wrapper\").className = 'page-wrapper ' + sidebar_type;\r\n            document.querySelector(\".page-body-wrapper\").className = 'page-body-wrapper ' + body_sidebar_type;\r\n        }\r\n\r\n        \r\n    }, [body_sidebar_type, color, layout_version, primary_color, secondary_color, sidebar_type]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* <div className=\"customizer-links\">\r\n                <div className=\"nav flex-column nac-pills\" id=\"c-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n                    <Nav tabs className=\"tab-list-bottom border-tab-primary\">\r\n                        <NavItem className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n                            \r\n                            <NavLink className={activeTab1 == '1' ? 'active' : ''} onClick={() => setActiveTab1('1')}>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n                            \r\n                            <NavLink className={activeTab1 == '2' ? 'active' : ''} onClick={() => setActiveTab1('2')}>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </div>\r\n            </div> */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ThemeCustomizer\r\n","import React, { Fragment , useState , useEffect } from 'react';\r\n\r\nconst Loader = () => {\r\n    const [show, setShow] = useState(true);\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setShow(false)\r\n          }, 100);\r\n        \r\n        return() => {\r\n            clearTimeout(timeout)\r\n        }\r\n        \r\n    },[show]);\r\n    return (\r\n        <Fragment>\r\n            <div className={`loader-wrapper ${show ? '' : 'loderhide'}`} >\r\n                <div className=\"loader bg-white\">\r\n                    <div className=\"whirly-loader\"> </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, { Fragment, useEffect } from 'react';\r\nimport Header from './common/header-component/header';\r\nimport Sidebar from './common/sidebar-component/sidebar';\r\n// import Footer from './common/footer';\r\nimport ThemeCustomizer from './common/theme-customizer'\r\nimport Loader from './common/loader';\r\nimport { checkAuthenticated, load_user } from '../actions/auth'\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.checkAuthenticated();\r\n        props.load_user();\r\n    }, [props])\r\n\r\n    return (\r\n        <Fragment>\r\n            <Loader />\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"page-body-wrapper\">\r\n                    <Header />\r\n                    <Sidebar />\r\n                    <div className=\"page-body\">\r\n                        {props.children}\r\n                    </div>\r\n                    {/* <Footer /> */}\r\n                    <ThemeCustomizer />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(App);","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNIN_SUCCESS,\r\n    SIGNIN_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null,\r\n    alreadyExists: null,\r\n    inValid: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            localStorage.setItem('refresh', payload.refresh);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh,\r\n                inValid: false\r\n            }\r\n        case SIGNIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                inValid: false,\r\n                alreadyExists: false\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n\r\n        case LOGIN_FAIL:\r\n        case SIGNIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                inValid: null,\r\n                alreadyExists: true\r\n            }\r\n\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n            }\r\n\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment } from 'react';\r\nimport { Home } from 'react-feather';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Breadcrumb = props => {\r\n    const breadcrumb = props;\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"page-header\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"page-header-left\" style={{marginLeft:\"-15px\"}}>                               \r\n                                <ol className=\"breadcrumb \">\r\n                                    <li className=\"breadcrumb-item\">\r\n                                        <Link to={`${process.env.PUBLIC_URL}/dashboard/default`}>\r\n                                            <Home />\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"breadcrumb-item active\">{breadcrumb.parent}</li>                        \r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Breadcrumb;\r\n","import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst Mold = ({ toggle3, modal3, handleAddFormChange, handleAddFormSubmit }) => {\r\n    return (\r\n        <>\r\n            <Button className=\"create_mold_btn\" color=\"primary\" onClick={toggle3}>Create Mold</Button>\r\n            <form>\r\n                <Modal isOpen={modal3} toggle={toggle3} className=\"modal-body\" centered={true}>\r\n                    <ModalHeader toggle={toggle3}> Add Mold </ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\">Enter New Mold ID:</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <input className=\"form-control\" name=\"Mold_Id\" type=\"text\" placeholder=\"Mold ID\" onChange={handleAddFormChange} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\">Platen Orientation :</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control digits\" name=\"Platen_Orientation\" onChange={handleAddFormChange}>\r\n                                        <option> Vertical </option>\r\n                                        <option> Horizontal </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\"> Number of Bases : </label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <input className=\"form-control\" name=\"Number_Of_Bases\" type=\"text\" placeholder=\"Number of Bases\" onChange={handleAddFormChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\"> Is this a Family Mold : </label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control\" name=\"Is_This_A_New_Mold\" onChange={handleAddFormChange} >\r\n                                        <option>Yes</option>\r\n                                        <option>No</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\"> Number of Parts :</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <input className=\"form-control\" name=\"Number_Of_Parts\" type=\"text\" placeholder=\"Number of Parts\" onChange={handleAddFormChange}/>\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" type='submit' onClick={handleAddFormSubmit}>Create</Button>\r\n                        <Button color=\"fourth\" onClick={toggle3}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Mold\r\n","import React, { useState } from 'react';\r\nimport \"../../assets/custom-stylesheet/app2_style.css\";\r\nimport \"../../assets/custom-stylesheet/samplepage_style.css\";\r\n// import { useHistory } from 'react-router-dom';\r\nimport '../App.css';\r\nimport Mold from '../modals/Mold';\r\nimport Table from 'react-bootstrap/Table'\r\nimport '../App.css';\r\nimport '../../assets/custom-stylesheet/grid_stylecss.css';\r\n\r\nconst MoldGrid = ({ MoldData, setMoldData, setShowGrid, modal3, toggle3, handleAddFormChange, handleAddFormSubmit, setMold_Id }) => {\r\n\r\n    const [editMoldData, setEditMoldData] = useState({\r\n        Mold_Id: \"\",\r\n        Platen_Orientation: \"\",\r\n        Number_Of_Bases: \"\",\r\n        Is_This_A_New_Mold: \"\",\r\n        Number_Of_Parts: \"\"\r\n    })\r\n\r\n    const [isRowId, setIsRowId] = useState(null)\r\n\r\n    const handleSession = (moldid) => {\r\n        setMold_Id(moldid)\r\n        setShowGrid(true)\r\n    }\r\n\r\n    const handleEditFormChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...editMoldData };\r\n        newFormData[fieldName] = fieldValue;\r\n\r\n        setEditMoldData(newFormData);\r\n\r\n    }\r\n\r\n    const handleEditFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const editedValue = {\r\n            id: isRowId,\r\n            Mold_Id: editMoldData.Mold_Id,\r\n            Platen_Orientation: editMoldData.Platen_Orientation,\r\n            Number_Of_Bases: editMoldData.Number_Of_Bases,\r\n            Is_This_A_New_Mold: editMoldData.Is_This_A_New_Mold,\r\n            Number_Of_Parts: editMoldData.Number_Of_Parts\r\n        }\r\n\r\n        const newValues = [...MoldData];\r\n\r\n        const index = MoldData.findIndex((value) => value.id === isRowId)\r\n\r\n        newValues[index] = editedValue;\r\n\r\n        setMoldData(newValues);\r\n\r\n        setIsRowId(null);\r\n\r\n    }\r\n\r\n    const deleteRow2 = (id) => {\r\n        const updatedRows = [...MoldData].filter((value) => {\r\n            return value.id !== id;\r\n        });\r\n        setMoldData(updatedRows);\r\n    };\r\n\r\n    const setId = (event, mold) => {\r\n\r\n        event.preventDefault();\r\n\r\n        setIsRowId(mold.id);\r\n\r\n        const formValues = {\r\n            Mold_Id: mold.Mold_Id,\r\n            Platen_Orientation: mold.Platen_Orientation,\r\n            Number_Of_Bases: mold.Number_Of_Bases,\r\n            Is_This_A_New_Mold: mold.Is_This_A_New_Mold,\r\n            Number_Of_Parts: mold.Number_Of_Parts\r\n        }\r\n\r\n        setEditMoldData(formValues);\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     if (user) {\r\n    //         console.log(user.id)\r\n    //     }\r\n    //     else {\r\n    //         console.log(\"N/A\")\r\n    //     }\r\n    // }, [user])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row m-4\">\r\n                    <div>\r\n                        <Mold modal3={modal3} toggle3={toggle3} handleAddFormChange={handleAddFormChange} handleAddFormSubmit={handleAddFormSubmit} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid\">\r\n                <form autoComplete=\"off\">\r\n                    <Table striped bordered hover responsive variant=\"light\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"Pressure_Heading\">\r\n                                    <h6> Mold ID </h6>\r\n                                </th>\r\n                                <th className=\"Pressure_Heading\">\r\n                                    <h6> Platen Orientation  </h6>\r\n                                </th>\r\n                                <th className=\"Pressure_Heading\">\r\n                                    <h6> Number of Bases </h6>\r\n                                </th>\r\n                                <th className=\"Pressure_Heading\">\r\n                                    <h6> Is a Family Mold </h6>\r\n                                </th>\r\n                                <th className=\"Pressure_Heading\">\r\n                                    <h6> Number of Parts </h6>\r\n                                </th>\r\n                                <th>\r\n                                    <h6> Go to Sessions </h6>\r\n                                </th>\r\n                                <th>\r\n                                    <h6> Action </h6>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                    </Table>\r\n                    <div className=\"viscosity_table\" onMouseOut={handleEditFormSubmit}>\r\n                        <Table striped bordered hover responsive variant=\"light\">\r\n                            <tbody className=\"grid_style\">\r\n                                {MoldData.map((mold, moldId) => (\r\n                                    <tr key={MoldData[moldId].id} onClick={(event) => setId(event, mold)}>\r\n                                        <>\r\n                                            {isRowId === mold.id ?\r\n                                                (\r\n                                                    <>\r\n                                                        <td> <input type='text' className=\"form-control\" name=\"Mold_Id\" onChange={handleEditFormChange} value={editMoldData.Mold_Id} /> </td>\r\n\r\n                                                        <td> <input type='text' className=\"form-control\" name=\"Platen_Orientation\" onChange={handleEditFormChange} value={editMoldData.Platen_Orientation} /> </td>\r\n\r\n                                                        <td> <input type='text' className=\"form-control\" name=\"Number_Of_Bases\" onChange={handleEditFormChange} value={editMoldData.Number_Of_Bases} /> </td>\r\n\r\n                                                        <td> <input type='text' className=\"form-control\" name=\"Is_This_A_New_Mold\" onChange={handleEditFormChange} value={editMoldData.Is_This_A_New_Mold} /> </td>\r\n\r\n                                                        <td> <input type='text' className=\"form-control\" name=\"Number_Of_Parts\" onChange={handleEditFormChange} value={editMoldData.Number_Of_Parts} /> </td>\r\n\r\n                                                        <td style={{ width: '90px' }}> <i className=\"fas fa-link viscocity_icons\" onClick={() => handleSession(mold.Mold_Id)}></i> </td>\r\n\r\n                                                        <td>\r\n                                                            <i className=\"fas fa-trash viscocity_icons\" onClick={() => deleteRow2(mold.id)}></i>\r\n                                                        </td>\r\n                                                    </>\r\n                                                )\r\n                                                :\r\n                                                (\r\n                                                    <>\r\n                                                        <td> <input type='text' className=\"form-control\" name=\"Mold_Id\" value={mold.Mold_Id} readOnly /> </td>\r\n\r\n                                                        <td> <input type='text' className=\"form-control\" name=\"Platen_Orientation\" value={mold.Platen_Orientation} readOnly /> </td>\r\n\r\n                                                        <td> <input type='text' className=\"form-control\" name=\"Number_Of_Bases\" value={mold.Number_Of_Bases} readOnly /> </td>\r\n\r\n                                                        <td> <input type='text' className=\"form-control\" name=\"Is_This_A_New_Mold\" value={mold.Is_This_A_New_Mold} readOnly /> </td>\r\n\r\n                                                        <td> <input type='text' className=\"form-control\" name=\"Number_Of_Parts\" value={mold.Number_Of_Parts} readOnly /> </td>\r\n\r\n                                                        <td style={{ width: '90px' }}> <i className=\"fas fa-link viscocity_icons\" onClick={() => handleSession(mold.Mold_Id)}></i> </td>\r\n\r\n                                                        <td>\r\n                                                            <i className=\"fas fa-trash viscocity_icons\" onClick={() => deleteRow2(mold.id)}></i>\r\n                                                        </td>\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        </>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MoldGrid","import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst Session = ({ toggle2, modal2, handleAddFormChange2, handleAddFormSubmit2, Mold_Id }) => {\r\n  return (\r\n    <>\r\n      <Button color=\"primary\" onClick={toggle2}>Create session</Button>\r\n      <form>\r\n        <Modal isOpen={modal2} toggle={toggle2} className=\"modal-body\" centered={true}>\r\n          <ModalHeader toggle={toggle2}>Add Session</ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label className=\"lbl_style\"> Mold ID :</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <input className=\"form-control\" name=\"Mold_Id\" type=\"text\" value={Mold_Id} readOnly/>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label className=\"lbl_style\">Session Name :</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <input className=\"form-control\" name=\"Session_Name\" type=\"text\" onChange={handleAddFormChange2} />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <label className=\"lbl_style\">Date :</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <div className=\"input-group\">\r\n                  <input className=\"form-control\" name=\"Date\" type=\"date\" onChange={handleAddFormChange2} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={handleAddFormSubmit2}> Create </Button>\r\n            <Button color=\"fourth\" onClick={toggle2}> Cancel </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Session\r\n","import React, { useState } from 'react'\r\nimport \"../../assets/custom-stylesheet/app2_style.css\";\r\nimport \"../../assets/custom-stylesheet/samplepage_style.css\";\r\nimport '../App.css';\r\nimport Session from '../modals/Session';\r\nimport { connect } from 'react-redux';\r\nimport Table from 'react-bootstrap/Table'\r\nimport '../App.css';\r\nimport '../../assets/custom-stylesheet/grid_stylecss.css';\r\n\r\nconst SessionGrid = ({ user, setshowSixStep, setSession_Id, Mold_Id, setShowGrid, SessionData, setSessionData, handleAddFormChange2, handleAddFormSubmit2 }) => {\r\n\r\n  const [modal2, setModal2] = useState();\r\n\r\n  const toggle2 = () => {\r\n    setModal2(!modal2)\r\n  }\r\n\r\n  const handleSession = (moldid) => {\r\n    setSession_Id(moldid)\r\n    setshowSixStep(true)\r\n  }\r\n\r\n  const [editSessionData, setEditSessionData] = useState({\r\n    Mold_Id: \"\",\r\n    Session_Name: \"\",\r\n    Date: \"\"\r\n  })\r\n\r\n  const [isRowId, setIsRowId] = useState(null)\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editSessionData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditSessionData(newFormData);\r\n\r\n  }\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedValue = {\r\n      id: isRowId,\r\n      Mold_Id: editSessionData.Mold_Id,\r\n      Session_Name: editSessionData.Session_Name,\r\n      Date: editSessionData.Date,\r\n    }\r\n\r\n    const newValues = [...SessionData];\r\n\r\n    const index = SessionData.findIndex((value) => value.id === isRowId)\r\n\r\n    newValues[index] = editedValue;\r\n\r\n    setSessionData(newValues);\r\n\r\n    setIsRowId(null);\r\n\r\n  }\r\n\r\n  const setId = (event, session) => {\r\n\r\n    event.preventDefault();\r\n\r\n    setIsRowId(session.id);\r\n\r\n    const formValues = {\r\n      Mold_Id: session.Mold_Id,\r\n      Session_Name: session.Session_Name,\r\n      Date: session.Date\r\n    }\r\n\r\n    setEditSessionData(formValues);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (user) {\r\n  //     console.log(user.id)\r\n  //   }\r\n  //   else {\r\n  //     console.log(\"N/A\")\r\n  //   }\r\n  // }, [user])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"m-2\">\r\n            <i className=\"fas fa-backward viscocity_icons\" onClick={() => setShowGrid(false)}>Go Back</i>\r\n          </div>\r\n          <div className=\"m-2\">\r\n            <Session modal2={modal2} toggle2={toggle2} handleAddFormChange2={handleAddFormChange2} handleAddFormSubmit2={handleAddFormSubmit2} Mold_Id={Mold_Id} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-fluid\">\r\n        <form autoComplete=\"off\">\r\n          <Table striped bordered hover responsive variant=\"light\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"Pressure_Heading\">\r\n                  <h6> Mold ID </h6>\r\n                </th>\r\n                <th className=\"Pressure_Heading\">\r\n                  <h6> Session Name </h6>\r\n                </th>\r\n                <th className=\"Pressure_Heading\">\r\n                  <h6> Date </h6>\r\n                </th>\r\n                <th style={{ width: '200px' }}>\r\n                  <h6> Go to Six Step Study</h6>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n          </Table>\r\n          <div className=\"viscosity_table\" onMouseOut={handleEditFormSubmit}>\r\n            <Table striped bordered hover responsive variant=\"light\">\r\n              <tbody className=\"grid_style\">\r\n                {SessionData.map((session, sessionId) => (\r\n                  <tr key={SessionData[sessionId].id} onClick={(event) => setId(event, session)}>\r\n                    <>\r\n                      {isRowId === SessionData[sessionId].id ?\r\n                        (\r\n                          <>\r\n                            <td> <input type='text' className=\"form-control\" name=\"Mold_Id\" value={session.Mold_Id} readOnly /> </td>\r\n\r\n                            <td> <input type='text' className=\"form-control\" name=\"Session_Name\" onChange={handleEditFormChange} value={editSessionData.Platen_Orientation} /> </td>\r\n\r\n                            <td> <input type='text' className=\"form-control\" name=\"Date\" value={editSessionData.Number_Of_Bases} readOnly /> </td>\r\n\r\n                            <td style={{ width: '200px' }}> <i className=\"fas fa-link viscocity_icons\" onClick={() => handleSession(session.id)}></i> </td>\r\n                          </>\r\n                        )\r\n                        :\r\n                        (\r\n                          <>\r\n                            <td> <input type='text' className=\"form-control\" name=\"Mold_Id\" value={session.Mold_Id} readOnly /> </td>\r\n\r\n                            <td> <input type='text' className=\"form-control\" name=\"Session_Name\" value={session.Session_Name} readOnly /> </td>\r\n\r\n                            <td> <input type='text' className=\"form-control\" name=\"Date\" value={session.Date} readOnly /> </td>\r\n\r\n                            <td style={{ width: '200px' }}> <i className=\"fas fa-link viscocity_icons\" onClick={() => handleSession(session.id)}></i> </td>\r\n                          </>\r\n                        )\r\n                      }\r\n                    </>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.auth.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(SessionGrid);","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst Viscocity = ({ modal, toggle }) => {\r\n\r\n    return (\r\n\r\n        <div className=\"card-body btn-showcase\">\r\n            {/* < !-- Using Form Modal --> */}\r\n            <Modal isOpen={modal} toggle={toggle} centered={true}>\r\n                <ModalHeader toggle={toggle}>{\"Generate Injection Speed\"}</ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\"> {\"Minimum value\"}:</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <input className=\"form-control \" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Minimum value\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\"> {\"Maximum value\"}:</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <input className=\"form-control \" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Maximum value\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\"> {\"Increment value\"}:</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <input className=\"form-control \" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Increment value\" />\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\">{\"Rescale\"}</Button>\r\n                    <Button color=\"fourth\" onClick={toggle}>{\"Cancel\"}</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Viscocity;\r\n\r\n\r\n","import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst ViscocityAddRow = ({ toggle2, modal2, addRow, increaseRow }) => {\r\n    return (\r\n        <div className=\"btn-showcase\">\r\n            <Modal isOpen={modal2} toggle={toggle2} centered={true}>\r\n                <ModalHeader toggle={toggle2}>\r\n                    Add Row\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"add-column\" className=\"lbl_style\">Enter Number Of Rows: </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <input className=\"form-control\" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Enter Number Of Rows\" name=\"rows\" onChange={addRow} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={increaseRow}> Add </Button>\r\n                    <Button color=\"fourth\" onClick={toggle2}> Cancel </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViscocityAddRow\r\n","import React from 'react'\r\n\r\nconst edit = ({ NewRow2, handleEditFormChange, deleteRow2, NewRow, rowId, editFormData, IntensificationRatio }) => {\r\n\r\n    return (\r\n        <>\r\n                <td> <input type='text' className=\"form-control\" name=\"Injection_Speed\" value={editFormData.Injection_Speed} onChange={handleEditFormChange} /> </td>\r\n\r\n                <td> <input type='text' className=\"form-control\" name=\"Fill_Time\" value={editFormData.Fill_Time} onChange={handleEditFormChange} /> </td>\r\n\r\n                <td> <input type='text' className=\"form-control\" name=\"Peak_Inj_Press\" value={editFormData.Peak_Inj_Press} onChange={handleEditFormChange} /> </td>\r\n\r\n                <td> <input type='text' className=\"form-control\" name=\"Viscosity\" value={NewRow2[rowId].Viscosity === \"\" ? ('-') : (Math.round(NewRow2[rowId].Fill_Time * NewRow2[rowId].Peak_Inj_Press * IntensificationRatio))} readOnly /> </td>\r\n\r\n                <td> <input type='text' className=\"form-control\" name=\"Shear_Rate\" value={NewRow2[rowId].Shear_Rate === \"\" ? '-' : Number(NewRow.Shear_Rate).toFixed(3)} readOnly /> </td>\r\n\r\n                <td> <input type='text' className=\"form-control\" name=\"Absolute_Viscosity\" value={rowId === 0 ? ('-') : (NewRow2[rowId].Viscosity === \"\" ? '-' : (Math.round(NewRow2[rowId - 1].Viscosity - NewRow2[rowId].Viscosity)))} readOnly /> </td>\r\n\r\n                <td> <input type='text' className=\"form-control\" name=\"Drop_Viscosity\" value={rowId === 0 ? ('-') : (NewRow2[rowId].Viscosity === \"\" ? '-' : Number((Math.round(NewRow2[rowId - 1].Viscosity - NewRow2[rowId].Viscosity) * 100) / (NewRow2[rowId - 1].Viscosity)).toFixed(1))} readOnly /> </td>\r\n\r\n                <td> <i className=\"fas fa-trash viscocity_icons\" onClick={() => deleteRow2(NewRow.id)}></i> </td>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default edit;\r\n","import React from 'react'\r\n\r\nconst Read = ({ setId, NewRow2, deleteRow2, NewRow, rowId, IntensificationRatio }) => {\r\n\r\n    return (\r\n        <>\r\n            <td> <input type='text' className=\"form-control\" value={NewRow.Injection_Speed} readOnly /> </td>\r\n\r\n            <td> <input type='text' className=\"form-control\" value={NewRow.Fill_Time} readOnly /> </td>\r\n\r\n            <td> <input type='text' className=\"form-control\" value={NewRow.Peak_Inj_Press} readOnly /> </td>\r\n\r\n            <td> <input type='text' className=\"form-control\" name=\"Viscosity\" value={NewRow2[rowId].Viscosity === \"\" ? ('-') : (Math.round(NewRow2[rowId].Fill_Time * NewRow2[rowId].Peak_Inj_Press * IntensificationRatio))} readOnly /> </td>\r\n\r\n            <td> <input type='text' className=\"form-control\" name=\"Shear_Rate\" value={NewRow2[rowId].Shear_Rate === \"\" ? '-' : Number(NewRow.Shear_Rate).toFixed(3)} readOnly /> </td>\r\n\r\n            <td> <input type='text' className=\"form-control\" name=\"Absolute_Viscosity\" value={rowId === 0 ? ('-') : (NewRow2[rowId].Viscosity === \"\" ? '-' : (Math.round(NewRow2[rowId - 1].Viscosity - NewRow2[rowId].Viscosity)))} readOnly /> </td>\r\n\r\n            <td> <input type='text' className=\"form-control\" name=\"Drop_Viscosity\" value={rowId === 0 ? ('-') : (NewRow2[rowId].Viscosity === \"\" ? '-' : Number((Math.round(NewRow2[rowId - 1].Viscosity - NewRow2[rowId].Viscosity) * 100) / (NewRow2[rowId - 1].Viscosity)).toFixed(1))} readOnly /> </td>\r\n\r\n            <td> <i className=\"fas fa-trash viscocity_icons\" onClick={() => deleteRow2(NewRow.id)}></i> </td>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Read\r\n","import React, { useState } from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport '../App.css';\r\nimport '../../assets/custom-stylesheet/grid_stylecss.css';\r\nimport { Button } from 'reactstrap';\r\nimport ViscocityAddRow from '../columns&rows/ViscocityAddRow';\r\nimport Edit from './ViscocityEdit'\r\nimport Read from './ViscocityRead'\r\nimport { HtmlEditor, Inject, RichTextEditorComponent, Toolbar } from '@syncfusion/ej2-react-richtexteditor';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst ViscocityGrid = ({ toggle2, modal2, addRow, increaseRow, NewRow2, deleteRow2, handleEditFormSubmit, handleEditFormChange, setId, isRowId, editFormData, IntensificationRatio }) => {\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  let toolbarSettings = {\r\n    items: ['Bold', 'Italic', 'Underline', 'StrikeThrough',\r\n      'FontName', 'FontSize', 'FontColor', 'BackgroundColor',\r\n      'LowerCase', 'UpperCase', '|',\r\n      'Formats', 'Alignments', 'OrderedList', 'UnorderedList',\r\n      'Outdent', 'Indent', '|', 'Undo', 'Redo']\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-4 d-flex justify-content-between\">\r\n        <div>\r\n          <Button onClick={toggle2} color=\"secondary\" className=\"btn btn-sm\" type=\"button\"> Add Row </Button>\r\n          <ViscocityAddRow toggle2={toggle2} modal2={modal2} addRow={addRow} increaseRow={increaseRow} />\r\n        </div>\r\n        <div>\r\n          <Button color=\"fifth\" className=\"btn btn-sm mr-4\" type=\"button\"> Print </Button>\r\n          <Button onClick={handleShow} color=\"primary\" className=\"btn btn-sm step-button2\" type=\"button\"> Comment </Button>\r\n          <Modal isOpen={show} centered={true} >\r\n            <ModalHeader toggle={handleClose}>\r\n              Add Comment\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <RichTextEditorComponent toolbarSettings={toolbarSettings} height={250}>\r\n\r\n                <Inject services={[Toolbar, HtmlEditor]} />\r\n              </RichTextEditorComponent>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\"> Save </Button>\r\n              <Button color=\"dark\" onClick={handleClose}> Cancel </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n      <form autoComplete=\"off\">\r\n        <Table striped bordered hover responsive variant=\"light\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"viscosity_heading2\">\r\n                <h6> Injection Speed </h6>\r\n              </th>\r\n              <th className=\"viscosity_heading2\">\r\n                <h6> Fill Time </h6>\r\n              </th>\r\n              <th className=\"viscosity_heading2\">\r\n                <h6> Peak Inj Press </h6>\r\n              </th>\r\n              <th className=\"viscosity_heading2\">\r\n                <h6> Viscosity </h6>\r\n              </th>\r\n              <th className=\"viscosity_heading\">\r\n                <h6> Shear Rate </h6>\r\n              </th>\r\n              <th className=\"viscosity_heading\">\r\n                <h6> AbsoluteDropViscosity </h6>\r\n              </th>\r\n              <th className=\"viscosity_heading\">\r\n                <h6> %DropViscosity </h6>\r\n              </th>\r\n              <th >\r\n                <h6> Action </h6>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n        </Table>\r\n        <div className=\"viscosity_table\" onMouseOut={handleEditFormSubmit}>\r\n          <Table striped bordered hover responsive variant=\"light\">\r\n            <tbody className=\"grid_style\">\r\n              {NewRow2.map((NewRow, rowId) => (\r\n                <tr key={NewRow2[rowId].id} onClick={(event) => setId(event, NewRow)}>\r\n                  {isRowId === NewRow.id ?\r\n                    (\r\n                      <Edit NewRow={NewRow} setId={setId} NewRow2={NewRow2} handleEditFormChange={handleEditFormChange} deleteRow2={deleteRow2} rowId={rowId} editFormData={editFormData} IntensificationRatio={IntensificationRatio} />\r\n                    )\r\n                    :\r\n                    (<Read NewRow={NewRow} NewRow2={NewRow2} setId={setId} deleteRow2={deleteRow2} rowId={rowId} editFormData={editFormData} IntensificationRatio={IntensificationRatio} />)\r\n                  }\r\n                </tr>\r\n\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViscocityGrid;\r\n","import React, { useState } from 'react';\r\n\r\n// Syncfusion chart control\r\nimport { ChartComponent, LineSeries, Inject, SeriesCollectionDirective, SeriesDirective, Category, DataLabel } from '@syncfusion/ej2-react-charts';\r\n\r\n// This is a modal imported from modals folder since we have a button i.e Generate Injection Speed this modal gets displayed\r\nimport Viscocity from '../modals/Viscocity';\r\nimport '../App.css';\r\nimport { Button } from 'reactstrap';\r\n\r\n// This is the Grid/Table of our viscosity curve import from Grids folder\r\nimport ViscocityGrid from '../Grids/ViscocityGrid';\r\n\r\n// Newrow2 array is holding this data.\r\nimport data from \"../data/Viscocity_curve_data.json\"\r\n\r\n// Generates random id's\r\nimport { nanoid } from 'nanoid'\r\n\r\n// Axios library to deal with api call's\r\nimport Axios from 'axios'\r\n\r\nconst ViscocityCurve = () => {\r\n\r\n    // Making an GET request to get the data from the database.\r\n    const getData = () => {\r\n\r\n        Axios.get(`${process.env.REACT_APP_API_URL}/six-step/viscosity/39`).then(\r\n            (res) => {\r\n                if (res.data.Grid_Data) {\r\n                    setNewRow2(res.data.Grid_Data);\r\n                    setIntensificationRatio(res.data.IntensificationRatio)\r\n                }\r\n                else {\r\n                    alert(\"No Data Found in the Database !!!\")\r\n                }\r\n                // console.log(res.data.Grid_Data)\r\n            }).catch  ( (err) =>\r\n                console.log(err)\r\n            )\r\n    }\r\n\r\n    // Making an post request to store the data to the database\r\n    const saveData = () => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({\r\n            \"Injection_Speed_Units\": Injection_Speed_Units,\r\n            \"Intensification_Ratio\": IntensificationRatio,\r\n            \"Pressure_Units\": Pressure_Units,\r\n            \"Grid_Data\": NewRow2\r\n        })\r\n\r\n        setMain_Data(body)\r\n\r\n        console.log(Main_Data)\r\n\r\n        Axios.post(`${process.env.REACT_APP_API_URL}/six-step/viscosity_save/`, Main_Data, config).then((res) => console.log(res))\r\n    }\r\n\r\n    // This is the Main Array in which the data will be sent to database.\r\n    const [Main_Data, setMain_Data] = useState();\r\n\r\n    // Set's the visibility of the Generate Injection Speed modal\r\n    const [modal, setModal] = useState();\r\n    const toggle = () => {\r\n        setModal(!modal)\r\n    }\r\n\r\n    // Set's the visibility of the modal which we use to get the number of row's to be generated which is imported in Viscosity Grid.\r\n    const [modal2, setModal2] = useState();\r\n    const toggle2 = () => {\r\n        setModal2(!modal2)\r\n    }\r\n\r\n    // This is our main array based on which all the row manupulation is done and which holds the row data as well.\r\n    const [NewRow2, setNewRow2] = useState(data);\r\n\r\n    // As the user enter's the number of row's it get's set in this variable.\r\n    const [row, setRow] = useState();\r\n\r\n    // This is the event to do the above said thing.\r\n    const addRow = (e) => {\r\n        e.preventDefault();\r\n        setRow(e.target.value)\r\n    }\r\n\r\n    // This is a simple array which holds the number of objects based on the row variable\r\n    const row1 = [];\r\n\r\n    // This is the event which gets called as the user click's ok in the add row modal.\r\n    // what it does is it run's a loop as many times the row variable is and along with that it pushes an object containing all the key's based on the grid with an id generated using nanoid library and then set's the row1 in the main array i.e NewRow2. \r\n\r\n    // Then using editFormData object, handleEditFormChange and handleEditFormSubmit we store the data in these objects as the user enter's in the grid's input field's  \r\n    const increaseRow = () => {\r\n        for (let i = 0; i < parseInt(row); i++) {\r\n            row1.push({\r\n                id: nanoid(),\r\n                Injection_Speed: \"\",\r\n                Fill_Time: \"\",\r\n                Peak_Inj_Press: \"\",\r\n                Viscosity: \"\",\r\n                Shear_Rate: \"\"\r\n            })\r\n        }\r\n        setNewRow2([...NewRow2, ...row1]);\r\n    };\r\n\r\n    // This is the event which deletes the row as clicked on the delete icon, id of the row gets passed and using filter method that row is filtered out.\r\n    const deleteRow2 = (id) => {\r\n        const updatedRows = [...NewRow2].filter((value) => {\r\n            return value.id !== id;\r\n        });\r\n        setNewRow2(updatedRows);\r\n    };\r\n\r\n    // There is an input field in viscosity curve asking for Intensification Ratio so this is a variable which holds the value of it and is used for calculations wherever needed.\r\n    const [IntensificationRatio, setIntensificationRatio] = useState()\r\n    const [Injection_Speed_Units, setInjection_Speed_Units] = useState()\r\n    const [Pressure_Units, setPressure_Units] = useState()\r\n\r\n    // Based on the grid we will be showing two chart's one is Injection Speed and other is shear rate so this is a boolean variable which switches between true/false on a Drop Down below and due to that the respective chart code gets rendered.\r\n    const [Injection_Speed, setInjection_Speed] = useState(true);\r\n\r\n    // This is the event which does the switching part.\r\n    const ChangeGraph = () => {\r\n        setInjection_Speed(!Injection_Speed)\r\n    }\r\n\r\n    // An object in which we Initially store the new values entered in row/column and then we replace this object with the existing object in our main array.\r\n    const [editFormData, setEditFormData] = useState({\r\n        Injection_Speed: \"\",\r\n        Fill_Time: \"\",\r\n        Peak_Inj_Press: \"\",\r\n        Viscosity: \"\",\r\n        Shear_Rate: \"\"\r\n    })\r\n\r\n    // This event is called when the input field's of the grid get's changed.\r\n    const handleEditFormChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Initially check's whether the user has entered the Intensification Ratio if not then alerts with the given statement.\r\n        if (!IntensificationRatio) {\r\n            alert(\"Please enter Intensification Ratio\")\r\n        }\r\n\r\n        // In the else part it does the job of storing the values entered by the user in the editFormData object.\r\n        // Here the logic is like, as the event get's called on change of the input field it get's the name and value of that input field and then it is stored in the editFormData object.\r\n        else {\r\n\r\n            const fieldName = event.target.getAttribute(\"name\");\r\n            const fieldValue = event.target.value;\r\n\r\n            const newFormData = { ...editFormData };\r\n            newFormData[fieldName] = fieldValue;\r\n\r\n            setEditFormData(newFormData);\r\n        }\r\n    }\r\n\r\n    // When clicked on any row of the grid this event set's the id of that row in itself using this variable we check exactly in which row change has been done and help's to switch between editable and readOnly row.\r\n    const [isRowId, setIsRowId] = useState(null)\r\n\r\n    // Once the data in inside editFormData then using isRowId we check exactly in which row data has been entered and including that row's id and values inside editFormdata we create a new local object and this object is replaced with the existing row's object.\r\n    // In such way we store the initially entered values and the changed values in our main array. \r\n    const handleEditFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // This is the local object mentioned above\r\n        const editedValue = {\r\n            id: isRowId,\r\n            Injection_Speed: editFormData.Injection_Speed,\r\n            Fill_Time: editFormData.Fill_Time,\r\n            Peak_Inj_Press: editFormData.Peak_Inj_Press,\r\n            Viscosity: Math.round(editFormData.Fill_Time * editFormData.Peak_Inj_Press * IntensificationRatio),\r\n            Shear_Rate: Number(1 / editFormData.Fill_Time).toFixed(3)\r\n        }\r\n\r\n        const newValues = [...NewRow2];\r\n\r\n        const index = NewRow2.findIndex((value) => value.id === isRowId)\r\n\r\n        newValues[index] = editedValue;\r\n\r\n        setNewRow2(newValues);\r\n\r\n        setIsRowId(null);\r\n\r\n    }\r\n\r\n    const setId = (event, NewRow) => {\r\n\r\n        event.preventDefault();\r\n\r\n        setIsRowId(NewRow.id);\r\n\r\n        const formValues = {\r\n            Injection_Speed: NewRow.Injection_Speed,\r\n            Fill_Time: NewRow.Fill_Time,\r\n            Peak_Inj_Press: NewRow.Peak_Inj_Press,\r\n        }\r\n\r\n        setEditFormData(formValues);\r\n    }\r\n\r\n    // The below three variables are used to set the minimum, maximum and interval of the chart axis.\r\n    const [minViscosity, setMinViscosity] = useState()\r\n    const [maxViscosity, setMaxViscosity] = useState()\r\n    const [Interval, setInterval] = useState()\r\n\r\n    // This event get's called on the Show Graph button and based on the data in the NewRow2 array it set's the values.\r\n    const setGraph = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        // One of the axis in the chart contains by default values Viscosity.\r\n\r\n        // So using the above state functions we set them, like based on the data the values will vary\r\n\r\n        // The minimum value in the range of the axis will be diff of Highest Viscosity value and Lowest Vicosity value divided by 5, and vise versa for maximum value i.e summation, so that we can get somewhere around the Viscosity Values\r\n        setMinViscosity(NewRow2[NewRow2.length - 1].Viscosity - NewRow2[NewRow2.length - 1].Viscosity / 5)\r\n\r\n        setMaxViscosity(NewRow2[NewRow2.length - NewRow2.length].Viscosity + NewRow2[NewRow2.length - NewRow2.length].Viscosity / 5)\r\n\r\n        // Interval is diff between two points on the axis and is found out by the diff between first two row's viscosity value divided by 3\r\n        setInterval((NewRow2[0].Viscosity - NewRow2[NewRow2.length - 1].Viscosity) / 3)\r\n\r\n        console.log(NewRow2)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"viscocity-curve\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Injection_Speed_Units\" className=\"lbl_design\"> Injection Speed Units: </label>\r\n                                    <select className=\"form-control digits\" onChange={(e) => setInjection_Speed_Units(e.target.value)} name=\"Injection_Speed_Units\">\r\n                                        <option>{\"1\"}</option>\r\n                                        <option>{\"2\"}</option>\r\n                                        <option>{\"3\"}</option>\r\n                                        <option>{\"4\"}</option>\r\n                                        <option>{\"5\"}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Intensification_Ratio\" className=\"lbl_design\">Intensification Ratio:</label>\r\n                                    <input className=\"form-control\" onChange={(e) => setIntensificationRatio(e.target.value)} name=\"Intensification_Ratio\" defaultValue={IntensificationRatio} type=\"text\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Pressure_Units\" className=\"lbl_design\"> Pressure Units: </label>\r\n                                    <input className=\"form-control\" onChange={(e) => setPressure_Units(e.target.value)} name=\"Pressure_Units\" type=\"text\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"step-button\">\r\n                                    <Button color=\"primary\" className=\"step-button2\" onClick={toggle}> Generate Injection Speed </Button>\r\n                                    {modal && <Viscocity toggle={toggle} modal={modal} />}\r\n                                </div >\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"grid-chart-container\">\r\n                <div>\r\n                    <ViscocityGrid toggle2={toggle2} modal2={modal2} addRow={addRow} increaseRow={increaseRow} NewRow2={NewRow2} deleteRow2={deleteRow2} handleEditFormChange={handleEditFormChange} handleEditFormSubmit={handleEditFormSubmit} setId={setId} isRowId={isRowId} editFormData={editFormData} IntensificationRatio={IntensificationRatio} />\r\n                </div>\r\n                <div className='d-flex'>\r\n                    <div className=\"m-4\">\r\n                        <Button color=\"secondary\" onClick={getData}> Import Data </Button>\r\n                    </div>\r\n                    <div className=\"m-4\">\r\n                        <Button color=\"secondary\" onClick={saveData}> Save Data </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"grid-chart-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleFormControlSelect30\" className=\"lbl_design\"> X-Axis: </label>\r\n                            <select className=\"form-control digits\" id=\"exampleFormControlSelect30\" onChange={ChangeGraph}>\r\n                                <option>{\"Injection Speed\"}</option>\r\n                                <option>{\"Shear Rate\"}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 mt-4\">\r\n                        <Button color=\"primary\" onClick={setGraph}> Show Graph </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        {Injection_Speed ? (\r\n                            <ChartComponent title=\"Viscosity Curve\" primaryXAxis={{ valueType: \"Category\", title: \"Injection Speed\" }} primaryYAxis={{ title: \"Viscosity\", minimum: minViscosity, maximum: maxViscosity, interval: Interval }}>\r\n\r\n                                <Inject services={[LineSeries, Category, DataLabel]} />\r\n\r\n                                <SeriesCollectionDirective>\r\n                                    <SeriesDirective type=\"Line\" dataSource={NewRow2} xName=\"Injection_Speed\" yName=\"Viscosity\" marker={{ dataLabel: { visible: true }, visible: true }} ></SeriesDirective>\r\n                                </SeriesCollectionDirective>\r\n\r\n                            </ChartComponent>\r\n                        )\r\n                            :\r\n                            (\r\n                                <ChartComponent title=\"Viscosity Curve\" primaryXAxis={{ valueType: \"Category\", title: \"Shear Rate\" }} primaryYAxis={{ title: \"Viscosity\", minimum: minViscosity, maximum: maxViscosity, interval: Interval }}>\r\n\r\n                                    <Inject services={[LineSeries, Category, DataLabel]} />\r\n\r\n                                    <SeriesCollectionDirective>\r\n                                        <SeriesDirective type=\"Line\" dataSource={NewRow2} xName=\"Shear_Rate\" yName=\"Viscosity\" marker={{ dataLabel: { visible: true }, visible: true }} ></SeriesDirective>\r\n                                    </SeriesCollectionDirective>\r\n\r\n                                </ChartComponent>\r\n                            )}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViscocityCurve;\r\n","import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst Cavity = ({ toggle2, modal2, addHeader, addColumn}) => {\r\n    return (\r\n        <div className=\"btn-showcase\">\r\n            <Button onClick={toggle2} color=\"secondary\" className=\"btn btn-sm\" type=\"button\"> Add Column </Button>\r\n            <Modal isOpen={modal2} toggle={toggle2} centered={true}>\r\n                <ModalHeader toggle={toggle2}>\r\n                    Add column\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-2\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"add-column\" className=\"lbl_style\">1: </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-10\">\r\n                                        <input className=\"form-control\" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Enter Header Name\" name=\"header\" onChange={addHeader} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={addColumn}> Add </Button>\r\n                    <Button color=\"fourth\" onClick={toggle2}> Cancel </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cavity\r\n","import React from 'react';\r\n\r\nconst CavityEditRow = ({ key1, handleEditFormChange, handleEditFormSubmit, NewRow2, key2  }) => {\r\n\r\n\r\n    return (\r\n        <td onMouseOut={handleEditFormSubmit}> <input type='text' className=\"form-control\" name={`value${key2}`} onChange={handleEditFormChange} defaultValue={NewRow2[key1][`value${key2}`] || ''} autoFocus/> </td>\r\n    )\r\n}\r\n\r\nexport default CavityEditRow;\r\n","import React from 'react'\r\n\r\nconst CavityReadRow = ({ key1, setId, value, NewRow2, key2}) => {\r\n    return (\r\n\r\n             <td onClick={(event) => setId(event, value)}> <input type='text' name={`value${key2}`} className=\"form-control\" defaultValue={NewRow2[key1][`value${key2}`] || ''} readOnly /> </td>\r\n    )\r\n}\r\n\r\nexport default CavityReadRow;\r\n","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport '../App.css';\r\nimport '../../assets/custom-stylesheet/grid_stylecss.css';\r\n\r\n// Grid Row's switches Between editable row and readonly row so the code for that is in these files.\r\nimport CavityEditRow from '../Grids/CavityEditRow';\r\nimport CavityReadRow from '../Grids/CavityReadRow';\r\n\r\nconst CavityGrid = ({ column, deleteColumn, NewRow2, handleEditFormChange, handleEditFormSubmit, setId, isRowId, setId2 }) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Cavity-Grid-Container\">\r\n                <form autoComplete=\"off\">\r\n                    <div className=\"cold_table\">\r\n                        {/* This table is coming from Bootstrap */}\r\n                        <Table striped bordered hover responsive variant=\"light\">\r\n                            <thead>\r\n                                <tr>\r\n\r\n                                    {/* In the grid 2 column are going to be static and the rest will be deletable so here based on the property in the column array if the object contains delete property then it will be deletable and if not then static */}\r\n\r\n                                    {column.map((value, key) => (\r\n                                        <>\r\n                                            {value.delete === false ?\r\n                                                (<th>\r\n                                                    <div className=\"table-heading-content\">\r\n                                                        <div className=\"table-heading\">\r\n                                                            <h6> {value.header} </h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </th>)\r\n                                                :\r\n                                                (<th>\r\n                                                    <div className=\"table-heading-content\">\r\n                                                        <div className=\"table-heading\">\r\n                                                            <h6> {value.header} </h6>\r\n                                                        </div>\r\n                                                        <div className=\"table-heading-icons\">\r\n                                                            <div> <i className=\"fas fa-trash\" onClick={() => deleteColumn(value.id)} ></i> </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </th>)}\r\n                                        </>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"grid_style\">\r\n                                {/* Here the row's are generated with the help of NewRow2 array and the <td>'s  should be equal to the number of columns e.g 3 td's for 3 columns */}\r\n\r\n                                {/* After that 1st column will be containing static row's, names will be based on the mold, so that's what we are checking over here */}\r\n\r\n                                {/* If the edit property of the column array's object is false then it will be the static row i.e 1st row but if not then editable row which switches as clicked on it to editable and then readOnly */}\r\n                                \r\n                                {NewRow2.map((value, key1) => (\r\n                                    <tr>\r\n                                        {column.map((value2, key2) => (\r\n                                            <>\r\n                                                {value2.edit === false ?\r\n                                                    (<td> <input type='text' className=\"form-control\" value={value.Cavity_No} readOnly /> </td>)\r\n                                                    :\r\n                                                    <>\r\n                                                        {isRowId === value.id ?\r\n                                                            (<CavityEditRow key1={key1} key2={key2} setId={setId} value={value} value2={value2} column={column} NewRow2={NewRow2} handleEditFormChange={handleEditFormChange} handleEditFormSubmit={handleEditFormSubmit} />)\r\n                                                            :\r\n                                                            (<CavityReadRow key1={key1} key2={key2} setId={setId} value={value} value2={value2} column={column} NewRow2={NewRow2} handleEditFormChange={handleEditFormChange} handleEditFormSubmit={handleEditFormSubmit} />)\r\n                                                        }\r\n                                                    </>\r\n                                                }\r\n                                            </>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CavityGrid","import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst CavityGrid2 = ({ column, NewRow2 }) => {\r\n\r\n    let [Total, setTotal] = useState([]);\r\n    let [Average, setAverage] = useState([]);\r\n    let [Range, setRange] = useState([]);\r\n    let [MaxPart, setMaxPart] = useState([]);\r\n    let [MinPart, setMinPart] = useState([]);\r\n    let [Percentage, setPercentage] = useState([]);\r\n\r\n    const Total_Average = () => {\r\n\r\n        let columnTotal = [], columnAverage = [], columnRange = [], columnMaxPart = [], columnMinPart = [], columnPercent = [];\r\n\r\n        for (let i = 1; i < column.length; i++) {\r\n\r\n            let total = 0, average = 0, range, Range_Array = [], max, min, percent = [];\r\n\r\n            const compare = (a, b) => {\r\n                return a - b;\r\n            }\r\n\r\n            for (let j = 1; j <= NewRow2.length; j++) {\r\n\r\n                Range_Array.push(isNaN(parseFloat(NewRow2[j - 1][`value${i}`])) ? 0 : parseFloat(NewRow2[j - 1][`value${i}`]))\r\n\r\n                total += Range_Array[j - 1]\r\n\r\n                average = Number(parseFloat(total) / parseInt(NewRow2.length)).toFixed(3)\r\n\r\n                const Sorted_Array = Range_Array.sort(compare)\r\n                range = Number(Sorted_Array[Sorted_Array.length - 1] - Sorted_Array[Sorted_Array.length - Sorted_Array.length]).toFixed(2)\r\n\r\n                max = Sorted_Array[Sorted_Array.length - 1]\r\n\r\n                min = (Sorted_Array[Sorted_Array.length - Sorted_Array.length] === 0 ? Sorted_Array[(Sorted_Array.length - Sorted_Array.length) + 1] : Sorted_Array[Sorted_Array.length - Sorted_Array.length])\r\n\r\n            }\r\n\r\n            for (let k = 1; k <= NewRow2.length; k++) {\r\n                percent.push( isNaN((Range_Array[k - 1] - average) * 100 / average) ? 0 : Number(((Range_Array[k - 1] - average) * 100 / average).toFixed(3) ))\r\n            }\r\n            \r\n            columnPercent[i - 1] = percent\r\n            setPercentage(columnPercent)\r\n\r\n            columnTotal[i - 1] = total\r\n            setTotal(columnTotal)\r\n\r\n            columnAverage[i - 1] = average\r\n            setAverage(columnAverage)\r\n\r\n            columnRange[i - 1] = range\r\n            setRange(columnRange)\r\n\r\n            columnMaxPart[i - 1] = max\r\n            setMaxPart(columnMaxPart)\r\n\r\n            columnMinPart[i - 1] = min\r\n            setMinPart(columnMinPart)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='mb-4'>\r\n                <Button color=\"dark\" onClick={Total_Average}> Calculate </Button>\r\n            </div>\r\n            <div className=\"Cavity-Grid-Container\">\r\n                <Table striped bordered hover responsive variant=\"light\">\r\n                    <thead>\r\n                        <tr>\r\n                            {column.map((value, key) => (\r\n                                <>\r\n                                    <th key={key}> <h6> {value.header} </h6> </th>\r\n                                </>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"grid_style\">\r\n                        <tr>\r\n                            {column.map((value1, key1) => (\r\n                                <>\r\n                                    {value1.edit === true ?\r\n                                        (<td> <input type='text' className=\"form-control\" value={Total[key1 - 1]} readOnly /> </td>)\r\n                                        :\r\n                                        (<td> <input type='text' className=\"form-control\" value=\"Total Fill\" readOnly /> </td>)}\r\n                                </>\r\n                            ))}\r\n                        </tr>\r\n                        <tr>\r\n                            {column.map((value1, key1) => (\r\n                                <>\r\n                                    {value1.edit === true ?\r\n                                        (<td> <input type='text' className=\"form-control\" value={Average[key1 - 1]} readOnly /> </td>)\r\n                                        :\r\n                                        (<td> <input type='text' className=\"form-control\" value=\"Average Fill\" readOnly /> </td>)}\r\n                                </>\r\n                            ))}\r\n                        </tr>\r\n                        <tr>\r\n                            {column.map((value1, key1) => (\r\n                                <>\r\n                                    {value1.edit === true ?\r\n                                        (<td> <input type='text' className=\"form-control\" value={Range[key1 - 1]} readOnly /> </td>)\r\n                                        :\r\n                                        (<td> <input type='text' className=\"form-control\" value=\"Range\" readOnly /> </td>)}\r\n                                </>\r\n                            ))}\r\n                        </tr>\r\n                        <tr>\r\n                            {column.map((value1, key1) => (\r\n                                <>\r\n                                    {value1.edit === true ?\r\n                                        (<td> <input type='text' className=\"form-control\" value={MaxPart[key1 - 1]} readOnly /> </td>)\r\n                                        :\r\n                                        (<td> <input type='text' className=\"form-control\" value=\"Max Part Wt.\" readOnly /> </td>)}\r\n                                </>\r\n                            ))}\r\n                        </tr>\r\n                        <tr>\r\n                            {column.map((value1, key1) => (\r\n                                <>\r\n                                    {value1.edit === true ?\r\n                                        (<td> <input type='text' className=\"form-control\" value={MinPart[key1 - 1]} readOnly /> </td>)\r\n                                        :\r\n                                        (<td> <input type='text' className=\"form-control\" value=\"Min Part Wt.\" readOnly /> </td>)}\r\n                                </>\r\n                            ))}\r\n                        </tr>\r\n                        <tr>\r\n                            {column.map((value) => (\r\n                                <>\r\n                                    {value.edit === true ?\r\n                                        (<td> <input type='text' className=\"form-control\" value='-' readOnly /> </td>)\r\n                                        :\r\n                                        (<td> <input type='text' className=\"form-control\" value=\"% Variation From Average\" readOnly /> </td>)}\r\n                                </>\r\n                            ))}\r\n                        </tr>\r\n                        {NewRow2.map((value, key1) => (\r\n                            <tr>\r\n                                {column.map((value2, key) => (\r\n                                    <>\r\n                                        {value2.edit === false ?\r\n                                            (<td> <input type='text' className=\"form-control\" value={value.Cavity_No} readOnly /> </td>)\r\n                                            :\r\n                                            (<td> <input type='text' className=\"form-control\" value={ Percentage[key - 1] === undefined ? ('-') : (Percentage[key - 1][key1]) } readOnly /> </td>)\r\n                                        }\r\n                                    </>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CavityGrid2;","export let data = [\r\n    {\r\n        \"id\": 0,\r\n        \"header\": \"Cavity No\",\r\n        \"edit\": false,\r\n        \"delete\": false\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"header\": \"Column 1\",\r\n        \"edit\": true,\r\n        \"delete\": false\r\n    }\r\n];\r\n\r\nexport let data2 = [\r\n    {\r\n        \"id\": 0,\r\n        \"Cavity_No\": 'ABC-1',\r\n        \"edit\": false\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"Cavity_No\": 'ABC-2',\r\n        \"edit\": true\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"Cavity_No\": 'ABC-3',\r\n        \"edit\": true\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"Cavity_No\": 'ABC-4',\r\n        \"edit\": true\r\n    }\r\n];","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst CavityEdit = ({ modal, toggle, column, addHeader, editColumnHeader, editColumn }) => {\r\n    return (\r\n        <div className=\"btn-showcase\">\r\n            {/* < !-- Using Form Modal --> */}\r\n            <Button color=\"primary\" onClick={toggle}> Edit Column Header </Button>\r\n            <Modal isOpen={modal} centered={true}>\r\n                <ModalHeader toggle={toggle}>{\"Edit Header's Value\"}</ModalHeader>\r\n                <ModalBody>\r\n                    {column.map((value, key) => (\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-2\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\">{key + 1}:</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-10\" onMouseOut={editColumnHeader}>\r\n                                        {key === 0 ? (<input className=\"form-control \" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Enter new header\" defaultValue={value.header} readOnly />)\r\n                                            :\r\n                                            (<input className=\"form-control \" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Enter new header\" defaultValue={value.header} onChange={addHeader} onClick={() => editColumn(value.id)} />)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"fourth\" onClick={toggle}> Update & Close </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CavityEdit","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { GridComponent, ColumnsDirective, ColumnDirective, Inject, DetailRow, Page, CommandColumn, Edit } from '@syncfusion/ej2-react-grids';\r\n\r\nconst Pressure = ({ modal, toggle }) => {\r\n\r\n    return (\r\n\r\n        <div className=\"card-body btn-showcase\">\r\n            {/* < !-- Using Form Modal --> */}\r\n    \r\n            <Modal isOpen={modal} toggle={toggle} centered={true}>\r\n                <ModalHeader toggle={toggle}>{\"Select Max Machine Pressure\"}</ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\"> Find Machine No:</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                                <input className=\"form-control \" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Nozzle Length\" />\r\n                            </div>\r\n                            <div className=\"col-md-2\">\r\n                                <Button color=\"primary\"> Search </Button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"d-flex flex-column justify-content-center\">\r\n                        <div>\r\n                            <GridComponent allowEditing={true} allowPaging={true} pageSettings={{ pageSize: 4 }}>\r\n                                <ColumnsDirective>\r\n                                    <ColumnDirective field=\"MatchNo\" headerText=\"Match No\" textAlign=\"Center\" width=\"100\" />\r\n                                    <ColumnDirective field=\"MaxPIPress\" headerText=\"Max PI Press\" textAlign=\"Center\" width=\"100\" />\r\n                                </ColumnsDirective>\r\n                                <Inject services={[DetailRow, Page, Edit, CommandColumn]} />\r\n                            </GridComponent>\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\"> Ok </Button>\r\n                    <Button color=\"fourth\" onClick={toggle}> Cancel </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Pressure;\r\n\r\n\r\n","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst PressureAddRow = ({ toggle2, modal2, addRow, increaseRow }) => {\r\n    return (\r\n        <div>\r\n            <div className=\"btn-showcase\">\r\n            <Modal isOpen={modal2} toggle={toggle2} centered={true}>\r\n                <ModalHeader toggle={toggle2}>\r\n                    Add Row\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"add-column\" className=\"lbl_style\">Enter Number Of Rows: </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <input className=\"form-control\" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Enter Number Of Rows\" name=\"rows\" onChange={addRow} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={increaseRow}> Add </Button>\r\n                    <Button color=\"fourth\" onClick={toggle2}> Cancel </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PressureAddRow\r\n","import React from 'react';\r\n\r\nconst edit = ({ NewRow2, handleEditFormChange, deleteRow2, NewRow, rowId, editFormData, Max_Press_Available }) => {\r\n    return (\r\n        <tr key={rowId}>\r\n\r\n            <td> <input type='text' className=\"form-control\" name=\"Flow_Area\" value={editFormData.Flow_Area} onChange={handleEditFormChange} autoFocus/> </td>\r\n\r\n            <td> <input type='text' className=\"form-control\" name=\"Peak_Pressure\" value={editFormData.Peak_Pressure} onChange={handleEditFormChange} /> </td>\r\n\r\n            <td> <input type='text' className=\"form-control\" name=\"Percent_Maximum\" value={Number(NewRow2[rowId].Percent_Maximum).toFixed(3) === 0 ? ('-') : (Number(NewRow2[rowId].Percent_Maximum).toFixed(3))} readOnly /> </td>\r\n\r\n            <td> <input type='text' className=\"form-control\" name=\"Delta_P\" value={ rowId === 0 ? (NewRow2[rowId].Peak_Pressure) : ( NewRow2[rowId].Peak_Pressure === \"\" ? '-' : ( Math.round(NewRow2[rowId].Peak_Pressure - NewRow2[rowId - 1].Peak_Pressure) ) ) } readOnly /> </td>\r\n\r\n             <td> <input type='text' className=\"form-control\" name=\"Percent_Delta_P\" value={ rowId === 0 ? (NewRow2[rowId].Percent_Maximum === \"\" ? '-' : Number(NewRow2[rowId].Percent_Maximum).toFixed(3)) : ( NewRow2[rowId].Peak_Pressure === \"\" ? '-' : ( Number((NewRow2[rowId].Peak_Pressure - NewRow2[rowId - 1].Peak_Pressure) * 100 / (Max_Press_Available)).toFixed(3) ) ) } readOnly /> </td>\r\n\r\n            <td> <i className=\"fas fa-trash viscocity_icons\" onClick={() => deleteRow2(NewRow.id)}></i> </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default edit;\r\n","import React from 'react'\r\n\r\nconst Read = ({ setId, deleteRow2, NewRow, rowId, NewRow2, Max_Press_Available }) => {\r\n    return (\r\n        <tr key={rowId} onClick={(event) => setId(event, NewRow)}>\r\n\r\n            <td> <input type='text' className=\"form-control\" value={NewRow.Flow_Area} /> </td>\r\n\r\n            <td> <input type='text' className=\"form-control\" value={NewRow.Peak_Pressure}/> </td>\r\n\r\n            <td> <input type='text' className=\"form-control\" value={NewRow2[rowId].Percent_Maximum === \"\" ? ('-') : (Number(NewRow2[rowId].Percent_Maximum).toFixed(3))} readOnly /> </td>\r\n\r\n            <td> <input type='text' className=\"form-control\" value={ rowId === 0 ? (NewRow2[rowId].Peak_Pressure) : ( NewRow2[rowId].Peak_Pressure === \"\" ? '-' : ( Math.round(NewRow2[rowId].Peak_Pressure - NewRow2[rowId-1].Peak_Pressure) ) ) } readOnly /> </td>\r\n\r\n            <td> <input type='text' className=\"form-control\" name=\"Percent_Delta_P\" value={ rowId === 0 ? (NewRow2[rowId].Percent_Maximum === \"\" ? '-' : Number(NewRow2[rowId].Percent_Maximum).toFixed(3)) : ( NewRow2[rowId].Peak_Pressure === \"\" ? '-' : ( Number((NewRow2[rowId].Peak_Pressure - NewRow2[rowId - 1].Peak_Pressure) * 100 / (Max_Press_Available)).toFixed(3) ) ) } readOnly /> </td>\r\n\r\n            <td> <i className=\"fas fa-trash viscocity_icons\" onClick={() => deleteRow2(NewRow.id)}></i> </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Read\r\n","import React, { useState } from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport '../App.css';\r\nimport '../../assets/custom-stylesheet/grid_stylecss.css';\r\nimport { Button } from 'reactstrap';\r\nimport PressureAddRow from '../columns&rows/PressureAddRow';\r\nimport Edit from './PressureEdit'\r\nimport Read from './PressureRead'\r\nimport { HtmlEditor, Inject, RichTextEditorComponent, Toolbar } from '@syncfusion/ej2-react-richtexteditor';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst PressureGrid = ({ toggle2, modal2, addRow, increaseRow, NewRow2, deleteRow2, handleEditFormSubmit, handleEditFormChange, setId, isRowId, editFormData, Max_Press_Available }) => {\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  let toolbarSettings = {\r\n    items: ['Bold', 'Italic', 'Underline', 'StrikeThrough',\r\n      'FontName', 'FontSize', 'FontColor', 'BackgroundColor',\r\n      'LowerCase', 'UpperCase', '|',\r\n      'Formats', 'Alignments', 'OrderedList', 'UnorderedList',\r\n      'Outdent', 'Indent', '|', 'Undo', 'Redo']\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-4 d-flex justify-content-between\">\r\n        <div>\r\n          <Button onClick={toggle2} color=\"secondary\" className=\"btn btn-sm\" type=\"button\"> Add Row </Button>\r\n          <PressureAddRow toggle2={toggle2} modal2={modal2} addRow={addRow} increaseRow={increaseRow} />\r\n        </div>\r\n        <div>\r\n          <Button color=\"fifth\" className=\"btn btn-sm mr-4\" type=\"button\"> Print </Button>\r\n          <Button onClick={handleShow} color=\"primary\" className=\"btn btn-sm step-button2\" type=\"button\"> Comment </Button>\r\n          <Modal isOpen={show} centered={true} >\r\n            <ModalHeader toggle={handleClose}>\r\n              Add Comment\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <RichTextEditorComponent toolbarSettings={toolbarSettings} height={250}>\r\n\r\n                <Inject services={[Toolbar, HtmlEditor]} />\r\n              </RichTextEditorComponent>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\"> Save </Button>\r\n              <Button color=\"dark\" onClick={handleClose}> Cancel </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n      <form autoComplete=\"off\">\r\n        <Table striped bordered hover responsive variant=\"light\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"Pressure_Heading\">\r\n                <h6> Flow Area </h6>\r\n              </th>\r\n              <th className=\"Pressure_Heading\">\r\n                <h6> Peak Pressure </h6>\r\n              </th>\r\n              <th className=\"Pressure_Heading\">\r\n                <h6> % Maximum </h6>\r\n              </th>\r\n              <th className=\"Pressure_Heading\">\r\n                <h6> Delta P </h6>\r\n              </th>\r\n              <th className=\"Pressure_Heading\">\r\n                <h6> % Delta P </h6>\r\n              </th>\r\n              <th >\r\n                <h6> Action </h6>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n        </Table>\r\n        <div className=\"viscosity_table\" onMouseOut={handleEditFormSubmit}>\r\n          <Table striped bordered hover responsive variant=\"light\">\r\n            <tbody className=\"grid_style\">\r\n              {NewRow2.map((NewRow, rowId) => (\r\n                <>\r\n                  {isRowId === NewRow.id ?\r\n                    (\r\n                      <Edit NewRow={NewRow} setId={setId} NewRow2={NewRow2} handleEditFormChange={handleEditFormChange} deleteRow2={deleteRow2} rowId={rowId} editFormData={editFormData} Max_Press_Available={Max_Press_Available} />\r\n                    )\r\n                    :\r\n                    (\r\n                      <Read NewRow={NewRow} NewRow2={NewRow2} setId={setId} deleteRow2={deleteRow2} rowId={rowId} editFormData={editFormData} Max_Press_Available={Max_Press_Available}/>\r\n                    )\r\n                  }\r\n                </>\r\n\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PressureGrid\r\n","import React, { useState } from 'react';\r\nimport { ChartComponent, LineSeries, Inject, SeriesCollectionDirective, SeriesDirective, Category, DataLabel } from '@syncfusion/ej2-react-charts';\r\nimport Pressure from \"../modals/Pressure\";\r\nimport { Button } from 'reactstrap';\r\nimport PressureGrid from '../Grids/PressureGrid';\r\nimport { nanoid } from 'nanoid'\r\nimport data from \"../data/Pressure_Drop_Data.json\"\r\n\r\nconst PressureDropStudy = () => {\r\n\r\n    const [modal, setModal] = useState();\r\n\r\n    const toggle = () => {\r\n        setModal(!modal)\r\n    }\r\n\r\n    const [modal2, setModal2] = useState();\r\n\r\n    const toggle2 = () => {\r\n        setModal2(!modal2)\r\n    }\r\n\r\n    const row1 = [];\r\n    const [row, setRow] = useState();\r\n    const [NewRow2, setNewRow2] = useState(data);\r\n    const [Max_Press_Available, setMax_Press_Available] = useState()\r\n    // const [minViscosity, setMinViscosity] = useState()\r\n    // const [maxViscosity, setMaxViscosity] = useState()\r\n    // const [Interval, setInterval] = useState()\r\n\r\n\r\n    const [editFormData, setEditFormData] = useState({\r\n        Flow_Area: \"\",\r\n        Peak_Pressure: \"\",\r\n        Percent_Maximum: \"\",\r\n        Max_Press_Available: Max_Press_Available\r\n    })\r\n\r\n    const [isRowId, setIsRowId] = useState(null)\r\n\r\n    const handleEditFormChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!Max_Press_Available) {\r\n            alert(\"Please Enter Max Pressure\")\r\n        }\r\n\r\n        else {\r\n            const fieldName = event.target.getAttribute(\"name\");\r\n            const fieldValue = event.target.value;\r\n\r\n            const newFormData = { ...editFormData };\r\n            newFormData[fieldName] = fieldValue;\r\n\r\n            setEditFormData(newFormData);\r\n        }\r\n\r\n    }\r\n\r\n    const handleEditFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const editedValue = {\r\n            id: isRowId,\r\n            Flow_Area: editFormData.Flow_Area,\r\n            Peak_Pressure: editFormData.Peak_Pressure,\r\n            Percent_Maximum: (editFormData.Peak_Pressure * 100) / Max_Press_Available,\r\n            Max_Press_Available: Max_Press_Available\r\n        }\r\n\r\n        const newValues = [...NewRow2];\r\n\r\n        const index = NewRow2.findIndex((value) => value.id === isRowId)\r\n\r\n        newValues[index] = editedValue;\r\n\r\n        setNewRow2(newValues);\r\n\r\n        setIsRowId(null);\r\n\r\n    }\r\n\r\n    const addRow = (e) => {\r\n        e.preventDefault();\r\n        setRow(e.target.value)\r\n    }\r\n\r\n    const increaseRow = () => {\r\n        for (let i = 0; i < parseInt(row); i++) {\r\n            row1.push({\r\n                id: nanoid(),\r\n                Flow_Area: \"\",\r\n                Peak_Pressure: \"\",\r\n                Percent_Maximum: \"\",\r\n                Delta_P: \"\",\r\n                Percent_Delta_P: \"\"\r\n            })\r\n        }\r\n        setNewRow2([...NewRow2, ...row1]);\r\n    };\r\n\r\n    const deleteRow2 = (id) => {\r\n        const updatedRows = [...NewRow2].filter((value) => {\r\n            return value.id !== id;\r\n        });\r\n        setNewRow2(updatedRows);\r\n    };\r\n\r\n    const setId = (event, NewRow) => {\r\n\r\n        event.preventDefault();\r\n\r\n        setIsRowId(NewRow.id);\r\n\r\n        const formValues = {\r\n            Flow_Area: NewRow.Flow_Area,\r\n            Peak_Pressure: NewRow.Peak_Pressure,\r\n            Percent_Maximum: NewRow.Percent_Maximum,\r\n        }\r\n\r\n        setEditFormData(formValues);\r\n    }\r\n\r\n    const setGraph = (event) => {\r\n\r\n        // setMinViscosity(NewRow2[NewRow2.length - 1].Viscosity - NewRow2[NewRow2.length - 1].Viscosity / 5)\r\n\r\n        // setMaxViscosity(NewRow2[NewRow2.length - NewRow2.length].Viscosity + NewRow2[NewRow2.length - NewRow2.length].Viscosity / 5)\r\n\r\n        // setInterval((NewRow2[0].Viscosity - NewRow2[NewRow2.length - 1].Viscosity) / 3)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleFormControlSelect30\" className=\"lbl_design\"> </label>\r\n                            <select className=\"form-control digits mt-2\" id=\"exampleFormControlSelect30\">\r\n                                <option>{\"psi\"}</option>\r\n                                <option>{\"mPa\"}</option>\r\n                                <option>{\"bar\"}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Nozzle_Length\" className=\"lbl_design\">Nozzle Length:</label>\r\n                            <input className=\"form-control\" id=\"Nozzle_Length\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Orifice_Diameter\" className=\"lbl_design\"> Orifice Diameter: </label>\r\n                            <input className=\"form-control\" id=\"Orifice_Diameter\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                        <div className=\"form-group\" onMouseOut={handleEditFormSubmit}>\r\n                            <label htmlFor=\"Max_Pressure_Available\" className=\"lbl_design\"> Max Pressure Available: </label>\r\n                            <input className=\"form-control\" id=\"Max_Pressure_Available\" type=\"text\" onChange={(e) => setMax_Press_Available(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <div className=\"step-button\">\r\n                            <div className=\"pre-step-button2\">\r\n                                <Button color=\"primary\" className=\"mt-1\" onClick={toggle}>{\"Select Max Press from machine DB\"}</Button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    {modal && <Pressure toggle={toggle} modal={modal} />}\r\n                </div>\r\n            </div>\r\n            <div className=\"grid-chart-container\">\r\n                <div>\r\n                    <PressureGrid toggle2={toggle2} modal2={modal2} addRow={addRow} increaseRow={increaseRow} NewRow2={NewRow2} deleteRow2={deleteRow2} handleEditFormChange={handleEditFormChange} handleEditFormSubmit={handleEditFormSubmit} setId={setId} isRowId={isRowId} editFormData={editFormData} Max_Press_Available={Max_Press_Available} />\r\n                </div>\r\n            </div>\r\n            <div className=\"grid-chart-container\">\r\n                <div className=\"chart_container_btn\">\r\n                    <Button color=\"primary\" onClick={setGraph}> Show Graph </Button>\r\n                </div>\r\n                <div>\r\n                    <ChartComponent title=\"Pressure Drop Study\" primaryXAxis={{ valueType: \"Category\", title: \"Flow Area\" }} primaryYAxis={{ title: \"Max Pressure\"}}>\r\n\r\n                        <Inject services={[LineSeries, Category, DataLabel]} />\r\n\r\n                        <SeriesCollectionDirective>\r\n                            <SeriesDirective type=\"Line\" dataSource={NewRow2} xName=\"Flow_Area\" yName=\"Max_Press_Available\" marker={{ dataLabel: { visible: true }, visible: true }} ></SeriesDirective>\r\n\r\n                            <SeriesDirective type=\"Line\" dataSource={NewRow2} xName=\"Flow_Area\" yName=\"Peak_Pressure\" marker={{ dataLabel: { visible: true }, visible: true }} ></SeriesDirective>\r\n                        </SeriesCollectionDirective>\r\n\r\n                    </ChartComponent>\r\n                </div>\r\n            </div>\r\n            <div className=\"row save_saveas_btn\">\r\n                <div className=\"col-md-12 text-right\">\r\n                    <Button color=\"third\" className=\"btn-save-chart\"> {\"Save\"} </Button>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PressureDropStudy;\r\n","import React from 'react'\r\n\r\nconst Edit = ({ handleEditFormChange, rowId, editFormData, }) => {\r\n    return (\r\n            <tr key={rowId}>\r\n                <td> <input type='text' className=\"form-control\" name=\"Melt_Temp\" value={editFormData.Melt_Temp} onChange={handleEditFormChange} /> </td>\r\n                <td> <input type='text' className=\"form-control\" name=\"Low\" value={editFormData.Low} onChange={handleEditFormChange} /> </td>\r\n                <td> <input type='text' className=\"form-control\" name=\"High\" value={editFormData.High} onChange={handleEditFormChange} /> </td>\r\n            </tr>\r\n    )\r\n}\r\n\r\nexport default Edit\r\n","import React from 'react'\r\n\r\nconst Read = ({ setId, NewRow, rowId }) => {\r\n    return (\r\n            <tr key={rowId} onClick={(event) => setId(event, NewRow)}>\r\n                <td> <input type='text' className=\"form-control\" defaultValue={NewRow.Melt_Temp} /> </td>\r\n                <td> <input type='text' className=\"form-control\" defaultValue={NewRow.Low} /> </td>\r\n                <td> <input type='text' className=\"form-control\" defaultValue={NewRow.High} /> </td>\r\n            </tr>\r\n    )\r\n}\r\n\r\nexport default Read\r\n","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport '../App.css';\r\nimport '../../assets/custom-stylesheet/grid_stylecss.css'\r\nimport Edit from './CosmeticEdit';\r\nimport Read from './CosmeticRead';\r\n\r\nconst CosmeticGrid = ({ Melting, Hydraulic, NewRow2, setId, handleEditFormChange, handleEditFormSubmit, isRowId, editFormData }) => {\r\n\r\n    return (\r\n        <div>\r\n            <Table striped bordered hover responsive variant=\"light\">\r\n                <thead>\r\n                    <tr>\r\n                        <th> <h6> {Melting} </h6> </th>\r\n\r\n                        <th> <h6> Low {Hydraulic} </h6> </th>\r\n\r\n                        <th> <h6> High {Hydraulic} </h6> </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"grid_style\" onMouseOut={handleEditFormSubmit}>\r\n                    {NewRow2.map((NewRow, rowId) => (\r\n                        <>\r\n                            {isRowId === NewRow.id ?\r\n                                (\r\n                                    <Edit NewRow={NewRow} setId={setId} NewRow2={NewRow2} handleEditFormChange={handleEditFormChange} rowId={rowId} editFormData={editFormData}/>\r\n                                )\r\n                                :\r\n                                (\r\n                                    <Read NewRow={NewRow} NewRow2={NewRow2} setId={setId} rowId={rowId} editFormData={editFormData} />\r\n                                )}\r\n                        </>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CosmeticGrid\r\n","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { HtmlEditor, Inject, RichTextEditorComponent, Toolbar } from '@syncfusion/ej2-react-richtexteditor';\r\nimport '../App.css';\r\n\r\nconst CosmeticEdit = ({ modal, toggle, setHeader1, setHeader2, Melting, Hydraulic }) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    let toolbarSettings = {\r\n        items: ['Bold', 'Italic', 'Underline', 'StrikeThrough',\r\n            'FontName', 'FontSize', 'FontColor', 'BackgroundColor',\r\n            'LowerCase', 'UpperCase', '|',\r\n            'Formats', 'Alignments', 'OrderedList', 'UnorderedList',\r\n            'Outdent', 'Indent', '|', 'Undo', 'Redo']\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"btn-showcase\">\r\n            {/* < !-- Using Form Modal --> */}\r\n            <div className=\"mb-4 d-flex justify-content-between\">\r\n                <div>\r\n                    <Button color=\"primary\" onClick={toggle}> Edit Column Header </Button>\r\n                </div>\r\n                <div>\r\n                    <Button color=\"fifth\" className=\"btn btn-sm mr-4\" type=\"button\"> Print </Button>\r\n                    <Button onClick={handleShow} color=\"primary\" className=\"btn btn-sm step-button2\" type=\"button\"> Comment </Button>\r\n                    <Modal isOpen={show} centered={true} >\r\n                        <ModalHeader toggle={handleClose}>\r\n                            Add Comment\r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                            <RichTextEditorComponent toolbarSettings={toolbarSettings} height={250}>\r\n\r\n                                <Inject services={[Toolbar, HtmlEditor]} />\r\n                            </RichTextEditorComponent>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\"> Save </Button>\r\n                            <Button color=\"dark\" onClick={handleClose}> Cancel </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n            <Modal isOpen={modal} toggle={toggle} centered={true}>\r\n                <ModalHeader toggle={toggle}>{\"Change Header Text\"}</ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-2\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\"> {\"X-Axis\"}:</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-10\">\r\n                                        <input className=\"form-control\" defaultValue={Melting} type=\"text\" onChange={setHeader1} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-2\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\"> {\"Y-Axis\"}:</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-10\">\r\n                                        <input className=\"form-control\" defaultValue={Hydraulic} type=\"text\" onChange={setHeader2} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\">{\"Set\"}</Button>\r\n                    <Button color=\"fourth\" onClick={toggle}>{\"Cancel\"}</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CosmeticEdit;\r\n","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst CoolingAddColumn = ({ toggle, modal, addHeader, addColumn}) => {\r\n    return (\r\n        <div className=\"btn-showcase\">\r\n            <Button onClick={toggle} color=\"fifth\" className=\"btn btn-sm\" type=\"button\"> Add Column </Button>\r\n            <Modal isOpen={modal} toggle={toggle} centered={true}>\r\n                <ModalHeader toggle={toggle}>\r\n                    Add column\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <form autoComplete='off'>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-2\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"add-column\" className=\"lbl_style\">1: </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-10\">\r\n                                        <input className=\"form-control\" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Enter Header Name\" name=\"header\" onChange={addHeader} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={addColumn}> Add </Button>\r\n                    <Button color=\"fourth\" onClick={toggle}> Cancel </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoolingAddColumn\r\n","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst CoolingAddRow = ({ toggle2, modal2, addRow, increaseRow }) => {\r\n    return (\r\n        <div className=\"btn-showcase\">\r\n        <Button onClick={toggle2} color=\"primary\" className=\"btn btn-sm\" type=\"button\"> Add Row </Button>\r\n        <Modal isOpen={modal2} toggle={toggle2} centered={true}>\r\n            <ModalHeader toggle={toggle2}>\r\n                Add Row\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <form>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"add-column\" className=\"lbl_style\">Enter Number Of Rows: </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                    <input className=\"form-control\" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Enter Number Of Rows\" name=\"rows\" onChange={addRow} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={increaseRow}> Add </Button>\r\n                <Button color=\"fourth\" onClick={toggle2}> Cancel </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CoolingAddRow\r\n","export let data = [\r\n    {\r\n        \"id\": 0,\r\n        \"header\": \"Cooling Time Study\",\r\n        \"edit\": true,\r\n        \"delete\": false\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"header\": \"Dim 1\",\r\n        \"edit\": true,\r\n        \"delete\": false\r\n    }\r\n]\r\n\r\nexport let data2 = [\r\n    {\r\n        \"id\": 0,\r\n        \"edit\": true\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"edit\": true\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"edit\": true\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"edit\": true\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"edit\": true\r\n    }\r\n];","import React from 'react'\r\n\r\nconst CoolingEditRow = ({ key1, value, column, handleEditFormChange, deleteRow2, handleEditFormSubmit, NewRow2 }) => {\r\n    return (\r\n        <tr key={key1} onMouseOut={handleEditFormSubmit}>\r\n\r\n        {column.map((index, key2) => (\r\n\r\n            (<td> <input type='text' name={index.header} className=\"form-control\" defaultValue={NewRow2[key1][index.header] || ''} onChange={handleEditFormChange} /> </td>)\r\n\r\n        ))}\r\n\r\n        <td> <i className=\"fas fa-trash viscocity_icons\" onClick={() => deleteRow2(value.id)}></i> </td>\r\n\r\n    </tr>\r\n    )\r\n}\r\n\r\nexport default CoolingEditRow\r\n","import React from 'react'\r\n\r\nconst CoolingReadRow = ({ key1, setId, value, column, deleteRow2, NewRow2, handleEditFormSubmit }) => {\r\n    return (\r\n        <tr key={value.id} onClick={(event) => setId(event, value)}>\r\n\r\n        {column.map((index, key2) => (\r\n\r\n            (<td> <input type='text' name={index.header} defaultValue={NewRow2[key1][index.header] || ''} className=\"form-control\" readOnly/> </td>)\r\n\r\n        ))}\r\n\r\n        <td> <i className=\"fas fa-trash viscocity_icons\" onClick={() => deleteRow2(value.id)}></i> </td>\r\n\r\n    </tr>\r\n    )\r\n}\r\n\r\nexport default CoolingReadRow\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport '../App.css';\r\nimport CoolingEditRow from '../Grids/CoolingEditRow';\r\nimport CoolingReadRow from '../Grids/CoolingReadRow';\r\n\r\nconst CoolingGrid = ({ column, deleteColumn, NewRow2, deleteRow2, handleEditFormChange, handleEditFormSubmit, setId, isRowId }) => {\r\n    return (\r\n        <>\r\n             <div className=\"Cold-Grid-Container\">\r\n                <form autoComplete=\"off\">\r\n                    <div className=\"cold_table\">\r\n                        <Table striped bordered hover responsive variant=\"light\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {column.map((value, key) => (\r\n                                        <>\r\n                                            {value.delete === false ? (<th>\r\n                                                <div className=\"table-heading-content\">\r\n                                                    <div className=\"table-heading\">\r\n                                                        <h6> {value.header} </h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </th>) : (<th>\r\n                                                <div className=\"table-heading-content\">\r\n                                                    <div className=\"table-heading\">\r\n                                                        <h6> {value.header} </h6>\r\n                                                    </div>\r\n                                                    <div className=\"table-heading-icons\">\r\n                                                        <div> <i className=\"fas fa-trash\" onClick={() => deleteColumn(value.id)} ></i> </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </th>)}\r\n                                        </>\r\n                                    ))}\r\n                                    <th> <h6> Action </h6> </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"grid_style\">\r\n                                {NewRow2.map((value, key1) => (\r\n                                    <>\r\n                                        {isRowId === value.id ?\r\n                                            (<CoolingEditRow key1={key1} setId={setId} value={value} column={column} NewRow2={NewRow2} handleEditFormChange={handleEditFormChange} deleteRow2={deleteRow2} handleEditFormSubmit={handleEditFormSubmit} />)\r\n                                            :\r\n                                            (<CoolingReadRow key1={key1} setId={setId} value={value} column={column} NewRow2={NewRow2} handleEditFormChange={handleEditFormChange} deleteRow2={deleteRow2} handleEditFormSubmit={handleEditFormSubmit}/>)\r\n                                        }\r\n                                    </>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CoolingGrid\r\n","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst CoolingEdit = ({ modal3, toggle3, column, addHeader, editColumnHeader, editColumn }) => {\r\n\r\n    return (\r\n\r\n        <div className=\"btn-showcase\">\r\n            {/* < !-- Using Form Modal --> */}\r\n            <Button color=\"primary\" onClick={toggle3}> Edit Column Header </Button>\r\n            <Modal isOpen={modal3} centered={true}>\r\n                <ModalHeader toggle={toggle3}>{\"Edit Header's Value\"}</ModalHeader>\r\n                <ModalBody>\r\n                    {column.map((value, key) => (\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-2\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\">{key + 1}:</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-10\" onMouseOut={editColumnHeader}>\r\n                                        {key === 0 ? (<input className=\"form-control \" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Enter new header\" defaultValue={value.header} readOnly />)\r\n                                            :\r\n                                            (<input className=\"form-control \" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Enter new header\" defaultValue={value.header} onChange={addHeader} onClick={() => editColumn(value.id)} />)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"fourth\" onClick={toggle3}> Update & Close </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoolingEdit;","import React from 'react'\r\n\r\nconst ColdEditRow = ({ key1, value, column, handleEditFormChange, deleteRow2, handleEditFormSubmit, NewRow2 }) => {\r\n    return (\r\n        <tr key={key1} onMouseOut={handleEditFormSubmit}>\r\n\r\n            {column.map((index, key2) => (\r\n\r\n                (<td> <input type='text' name={index.header} className=\"form-control\" defaultValue={NewRow2[key1][index.header] || ''} onChange={handleEditFormChange} /> </td>)\r\n\r\n            ))}\r\n\r\n            <td> <i className=\"fas fa-trash viscocity_icons\" onClick={() => deleteRow2(value.id)}></i> </td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ColdEditRow\r\n","import React from 'react'\r\n\r\nconst ColdReadRow = ({ key1, setId, value, column, deleteRow2, NewRow2, handleEditFormSubmit }) => {\r\n    return (\r\n        <tr key={value.id} onClick={(event) => setId(event, value)}>\r\n\r\n            {column.map((index, key2) => (\r\n\r\n                (<td> <input type='text' name={index.header} defaultValue={NewRow2[key1][index.header] || ''} className=\"form-control\" readOnly/> </td>)\r\n\r\n            ))}\r\n\r\n            <td> <i className=\"fas fa-trash viscocity_icons\" onClick={() => deleteRow2(value.id)}></i> </td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ColdReadRow\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport '../App.css';\r\nimport ColdEditRow from '../Grids/ColdEditRow';\r\nimport ColdReadRow from '../Grids/ColdReadRow';\r\n\r\nconst ColdGrid1 = ({ column, deleteColumn, NewRow2, deleteRow2, handleEditFormChange, handleEditFormSubmit, setId, isRowId }) => {\r\n    return (\r\n        <>\r\n            <div className=\"Cold-Grid-Container\">\r\n                <form autoComplete=\"off\">\r\n                    <div className=\"cold_table\">\r\n                        <Table striped bordered hover responsive variant=\"light\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {column.map((value, key) => (\r\n                                        <>\r\n                                            {value.delete === false ? (<th>\r\n                                                <div className=\"table-heading-content\">\r\n                                                    <div className=\"table-heading\">\r\n                                                        <h6> {value.header} </h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </th>) : (<th>\r\n                                                <div className=\"table-heading-content\">\r\n                                                    <div className=\"table-heading\">\r\n                                                        <h6> {value.header} </h6>\r\n                                                    </div>\r\n                                                    <div className=\"table-heading-icons\">\r\n                                                        <div> <i className=\"fas fa-trash\" onClick={() => deleteColumn(value.id)} ></i> </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </th>)}\r\n                                        </>\r\n                                    ))}\r\n                                    <th> <h6> Action </h6> </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"grid_style\">\r\n                                {NewRow2.map((value, key1) => (\r\n                                    <>\r\n                                        {isRowId === value.id ?\r\n                                            (<ColdEditRow key1={key1} setId={setId} value={value} column={column} NewRow2={NewRow2} handleEditFormChange={handleEditFormChange} deleteRow2={deleteRow2} handleEditFormSubmit={handleEditFormSubmit} />)\r\n                                            :\r\n                                            (<ColdReadRow key1={key1} setId={setId} value={value} column={column} NewRow2={NewRow2} handleEditFormChange={handleEditFormChange} deleteRow2={deleteRow2} handleEditFormSubmit={handleEditFormSubmit}/>)\r\n                                        }\r\n                                    </>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ColdGrid1;\r\n","import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst ColdAddColumn = ({ toggle, modal, addHeader, addColumn }) => {\r\n    return (\r\n        <div className=\"btn-showcase\">\r\n                <Button onClick={toggle} color=\"fifth\" className=\"btn btn-sm\" type=\"button\"> Add Column </Button>\r\n                <Modal isOpen={modal} toggle={toggle} centered={true}>\r\n                    <ModalHeader toggle={toggle}>\r\n                        Add column\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <form autoComplete='off'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-2\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"add-column\" className=\"lbl_style\">1: </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-10\">\r\n                                            <input className=\"form-control\" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Enter Header Name\" name=\"header\" onChange={addHeader} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={addColumn}> Add </Button>\r\n                        <Button color=\"fourth\" onClick={toggle}> Cancel </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColdAddColumn;\r\n","import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst ColdAddRow = ({ toggle2, modal2, addRow, increaseRow }) => {\r\n    return (\r\n        <div className=\"btn-showcase\">\r\n            <Button onClick={toggle2} color=\"primary\" className=\"btn btn-sm\" type=\"button\"> Add Row </Button>\r\n            <Modal isOpen={modal2} toggle={toggle2} centered={true}>\r\n                <ModalHeader toggle={toggle2}>\r\n                    Add Row\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"add-column\" className=\"lbl_style\">Enter Number Of Rows: </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <input className=\"form-control\" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Enter Number Of Rows\" name=\"rows\" onChange={addRow} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={increaseRow}> Add </Button>\r\n                    <Button color=\"fourth\" onClick={toggle2}> Cancel </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColdAddRow;\r\n","export let data = [\r\n    {\r\n        \"id\": 0,\r\n        \"header\": \"Time\",\r\n        \"edit\": true,\r\n        \"delete\": false\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"header\": \"Weight 1\",\r\n        \"edit\": true,\r\n        \"delete\": false\r\n    }\r\n]\r\n\r\nexport let data2 = [\r\n    {\r\n        \"id\": 0,\r\n        \"edit\": true\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"edit\": true\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"edit\": true\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"edit\": true\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"edit\": true\r\n    }\r\n];","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport '../App.css';\r\n\r\nconst ColdGrid2 = ({ NewRow2, grid2}) => {\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"cold_table2\">\r\n                    <Table striped bordered hover responsive variant=\"light\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className='cold-heading'> <h6> WeightIncrease [{grid2}] </h6> </th>\r\n                                <th className='cold-heading'> <h6> %WeightIncrease [{grid2}] </h6> </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"grid_style\">\r\n                            {NewRow2.map((value, key1) => (\r\n                                <tr key={key1}>\r\n\r\n                                    <td className='cold-heading'> <input type=\"text\" \r\n                                    value={ key1 === 0 ? ('-') : ( isNaN(NewRow2[key1][`${grid2}`]) ? '-' : ( Number(NewRow2[key1][`${grid2}`] -  NewRow2[key1 - 1][`${grid2}`]).toFixed(1) ) )  }\r\n                                    className=\"form-control\" readOnly /> </td>\r\n\r\n                                    <td className='cold-heading'> <input type=\"text\" \r\n                                    value={ key1 === 0 ? ('-') : ( isNaN(NewRow2[key1][`${grid2}`]) ? '-' : ( Number((NewRow2[key1][`${grid2}`] -  NewRow2[key1 - 1][`${grid2}`]) / (NewRow2[key1 - 1][`${grid2}`]) * 100).toFixed(3) ))} \r\n                                    className=\"form-control\" readOnly /> </td>\r\n                                    \r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ColdGrid2;","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst ColdEdit = ({ modal3, toggle3, column, addHeader, editColumnHeader, editColumn }) => {\r\n\r\n    return (\r\n\r\n        <div className=\"btn-showcase\">\r\n            {/* < !-- Using Form Modal --> */}\r\n            <Button color=\"primary\" onClick={toggle3}> Edit Column Header </Button>\r\n            <Modal isOpen={modal3} centered={true}>\r\n                <ModalHeader toggle={toggle3}>{\"Edit Header's Value\"}</ModalHeader>\r\n                <ModalBody>\r\n                    {column.map((value, key) => (\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-2\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"exampleFormControlSelect23\" className=\"lbl_style\">{key + 1}:</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-10\" onMouseOut={editColumnHeader}>\r\n                                        {key === 0 ? (<input className=\"form-control \" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Enter new header\" defaultValue={value.header} readOnly />)\r\n                                            :\r\n                                            (<input className=\"form-control \" id=\"exampleInputPassword27\" type=\"text\" placeholder=\"Enter new header\" defaultValue={value.header} onChange={addHeader} onClick={() => editColumn(value.id)} />)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"fourth\" onClick={toggle3}> Update & Close </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColdEdit;","import * as React from \"react\";\r\nimport '../App.css';\r\n// Tab view component from syncfusion to navigate through six steps study\r\nimport { TabComponent, TabItemDirective, TabItemsDirective } from \"@syncfusion/ej2-react-navigations\";\r\n// Import all the six step's component which are created outside this file in same folder to code complexity\r\nimport ViscocityCurve from \"./ViscocityCurve\";\r\nimport CavityBalance from \"./CavityBalance\";\r\nimport PressureDropStudy from \"./PressureDropStudy\";\r\nimport CosmeticPressure from \"./CosmeticPressure\";\r\nimport CoolingTimeStudy from \"./CoolingTimeStudy\";\r\nimport ColdRunner from \"./ColdRunner\";\r\n\r\n// Using a Function Component\r\nconst SixStepStudy = () => {\r\n\r\n    // Declare the names of the tab's\r\n        let headertext = [\r\n            { text: \"Viscosity Curve\" },\r\n            { text: \"Cavity Balance\" },\r\n            { text: \"Pressure Drop Study\" },\r\n            { text: \"Cosmetic Process Window\" },\r\n            { text: \"Gate Seal Study\" },\r\n            { text: \"Cooling Time Study\" },\r\n        ];\r\n\r\n        // These are the event's which will get called when clicked on the respective step's tab and once they are called they render the component of that respective tab which we have imported above\r\n        function content0() {\r\n            return (<div>\r\n                <ViscocityCurve />\r\n            </div>);\r\n        }\r\n\r\n        function content1() {\r\n            return (<div>\r\n                <CavityBalance />\r\n            </div>);\r\n        }\r\n\r\n        function content2() {\r\n            return (<div>\r\n                <PressureDropStudy />\r\n            </div>);\r\n        }\r\n\r\n        function content3() {\r\n            return (<div>\r\n                <CosmeticPressure />\r\n            </div>);\r\n        }\r\n\r\n        function content4() {\r\n            return (<div>\r\n                  <ColdRunner />\r\n            </div>);\r\n        }\r\n\r\n        function content5() {\r\n            return (<div>\r\n              <CoolingTimeStudy />\r\n            </div>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"study-container\">\r\n                                {/* This is Syncfusion Tab control in which header attribute is to display the name of that tab and content attribute to display the content under that tab */}\r\n                                <TabComponent heightAdjustMode=\"Auto\" id=\"defaultTab\">\r\n                                    <TabItemsDirective>\r\n                                        <TabItemDirective header={headertext[0]} content={content0} />\r\n                                        <TabItemDirective header={headertext[1]} content={content1} />\r\n                                        <TabItemDirective header={headertext[2]} content={content2} />\r\n                                        <TabItemDirective header={headertext[3]} content={content3} />\r\n                                        <TabItemDirective header={headertext[4]} content={content4} />\r\n                                        <TabItemDirective header={headertext[5]} content={content5} />\r\n                                    </TabItemsDirective>\r\n                                </TabComponent>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default SixStepStudy","import React, { useState } from 'react';\r\nimport Breadcrumb from '../common/breadcrumb';\r\nimport '../App.css';\r\nimport MoldGrid from './MoldGrid';\r\nimport { nanoid } from 'nanoid';\r\nimport { connect } from 'react-redux';\r\nimport SessionGrid from './SessionGrid';\r\nimport SixStepStudy from '../sixstepstudy/SixStepStudy';\r\n\r\nconst Dashboard = ({ user }) => {\r\n\r\n    const [modal3, setModal3] = useState();\r\n\r\n    const toggle3 = () => {\r\n        setModal3(!modal3)\r\n    }\r\n\r\n    const [Mold_Id, setMold_Id] = useState(null)\r\n    const [Session_Id, setSession_Id] = useState(null)\r\n    const [showGrid, setShowGrid] = useState();\r\n    const [showSixStep, setshowSixStep] = useState();\r\n\r\n    const [MoldData, setMoldData] = useState([]);\r\n\r\n    const [SessionData, setSessionData] = useState([]);\r\n\r\n    const [addSessionData, setAddSessionData] = useState({\r\n        Mold_Id: \"\",\r\n        Session_Name: \"\",\r\n        Date: \"\"\r\n    });\r\n\r\n    const [addMoldData, setAddMoldData] = useState({\r\n        Mold_Id: \"\",\r\n        Platen_Orientation: \"\",\r\n        Number_Of_Bases: \"\",\r\n        Is_This_A_New_Mold: \"\",\r\n        Number_Of_Parts: \"\"\r\n    });\r\n\r\n    const handleAddFormChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...addMoldData };\r\n        newFormData[fieldName] = fieldValue;\r\n\r\n        setAddMoldData(newFormData);\r\n    };\r\n\r\n    const handleAddFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!addMoldData.Mold_Id) {\r\n            alert(\"Please Enter Mold Data\")\r\n        }\r\n        else {\r\n            const newMold = {\r\n                id: nanoid(),\r\n                Mold_Id: addMoldData.Mold_Id,\r\n                Platen_Orientation: addMoldData.Platen_Orientation ? addMoldData.Platen_Orientation : 'Vertical',\r\n                Number_Of_Bases: addMoldData.Number_Of_Bases,\r\n                Is_This_A_New_Mold: addMoldData.Is_This_A_New_Mold ? addMoldData.Is_This_A_New_Mold : 'Yes',\r\n                Number_Of_Parts: addMoldData.Number_Of_Parts\r\n            };\r\n\r\n            const newMolds = [...MoldData, newMold];\r\n            setMoldData(newMolds);\r\n        }\r\n    };\r\n\r\n    const handleAddFormChange2 = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...addSessionData };\r\n        newFormData[fieldName] = fieldValue;\r\n\r\n        setAddSessionData(newFormData);\r\n    };\r\n\r\n    const handleAddFormSubmit2 = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!addSessionData.Session_Name) {\r\n            alert(\"Please enter Session Data\")\r\n        }\r\n        else {\r\n            const newSession = {\r\n                id: nanoid(),\r\n                Mold_Id: addSessionData.Mold_Id ? addSessionData.Mold_Id : '1',\r\n                Session_Name: addSessionData.Session_Name,\r\n                Date: addSessionData.Date\r\n            };\r\n\r\n            const newSessions = [...SessionData, newSession];\r\n            setSessionData(newSessions);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showGrid ? (showSixStep ? <div className='row'>\r\n                <div className='mt-3'>\r\n                    <i className=\"fas fa-backward viscocity_icons\" onClick={() => setshowSixStep(false)}>Go Back</i>\r\n                </div>\r\n                <div>\r\n                    <Breadcrumb parent=\"Dashboard / Six Step Study\" title=\"Default\" />\r\n                </div>\r\n            </div> : <Breadcrumb parent=\"Dashboard / Sessions\" title=\"Default\" />) : <Breadcrumb parent=\"Dashboard / Molds\" title=\"Default\" />}\r\n            <div className=\"container-fluid\">\r\n                {showGrid ?\r\n                    (showSixStep ? <SixStepStudy /> : <SessionGrid setshowSixStep={setshowSixStep} setSession_Id={setSession_Id} Session_Id={Session_Id} Mold_Id={Mold_Id} setShowGrid={setShowGrid} SessionData={SessionData} setSessionData={setSessionData} handleAddFormChange2={handleAddFormChange2} handleAddFormSubmit2={handleAddFormSubmit2} />)\r\n                    :\r\n                    (<MoldGrid handleAddFormChange={handleAddFormChange} handleAddFormSubmit={handleAddFormSubmit} MoldData={MoldData} setMoldData={setMoldData} setShowGrid={setShowGrid} modal3={modal3} toggle3={toggle3} setMold_Id={setMold_Id} />)\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React, { useState } from 'react';\r\nimport '../assets/custom-stylesheet/login_style.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\n\r\nconst LogIn = ({ login, isAuthenticated, inValid }) => {\r\n\r\n    const [show1, setShow1] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (inValid) {\r\n            setShow1(true)\r\n        }\r\n        else {\r\n            login(email, password)\r\n        }\r\n    };\r\n\r\n    // Check isAuthenticated ?\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }   \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"container-fluid p-0\">\r\n                    <div className=\"authentication-main\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"auth-innerright\">\r\n                                    <div className=\"authentication-box\">\r\n\r\n                                        <div className=\"card mt-4\">\r\n                                            {show1 && <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                                                <strong> Invalid !! </strong>\r\n                                                Email/Password combination\r\n                                                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={() => setShow1(false)}>\r\n                                                    <span aria-hidden=\"true\">&times;</span>\r\n                                                </button>\r\n                                            </div>}\r\n                                            <div className=\"card-body card_css\">\r\n                                                <div className=\"text-center\">\r\n                                                    <h5 className=\"card_head\"> LOGIN </h5>\r\n                                                </div>\r\n                                                <form className=\"theme-form\" onSubmit={e => onSubmit(e)}>\r\n\r\n                                                    <div className=\"form-group\">\r\n\r\n                                                        <label className=\"col-form-label pt-0\"> Email </label>\r\n\r\n                                                        <input className=\"form-control\" type=\"email\" name=\"email\" value={email}\r\n                                                            onChange={e => onChange(e)} placeholder='Please Enter Your Email' required />\r\n\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group\">\r\n\r\n                                                        <label className=\"col-form-label\"> Password </label>\r\n\r\n                                                        <div className=\"d-flex mt-2\">\r\n                                                            <input className=\"form-control\" placeholder=\"Enter Your Password\" onChange={e => onChange(e)} value={password} minLength={8} name=\"password\" type={showPassword ? \"text\" : \"password\"} required />\r\n                                                            <i className=\"far fa-eye m-2\" style={{ cursor : \"pointer\" }} onClick={ () => setShowPassword(!showPassword) }></i>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group form-row mt-3 mb-0 text-center\">\r\n                                                        <button className=\"btn btn-primary btn-block btn_txt\" type=\"submit\">\r\n                                                            Login\r\n                                                        </button>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row checkbox\">\r\n\r\n                                                        <Link to=\"/reset-password\" className=\"col-md-8 btn-link text-capitalize text-right mt-2 sign_up\">\r\n                                                            Forgot Password ?\r\n                                                        </Link>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"login_links text-center\">\r\n\r\n                                                        <div className=\"mt-2\">\r\n                                                            Don't have an Account ?\r\n                                                            <Link className=\"btn-link text-capitalize sign_up ml-2\" to=\"/signup\">\r\n                                                                Sign Up\r\n                                                            </Link>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    inValid: state.auth.inValid,\r\n    user: state.auth.user\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(LogIn);","import React, { Fragment, useState } from 'react';\r\nimport '../assets/custom-stylesheet/login_style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../actions/auth';\r\n\r\nconst Signup = ({ signup, alreadyExists, isAuthenticated }) => {\r\n\r\n    const [show1, setShow1] = useState(false);\r\n    const [show2, setShow2] = useState(false);\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showPassword2, setShowPassword2] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    const { name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => { \r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password !== re_password) {\r\n            setShow1(true)\r\n        }\r\n        else {\r\n            setShow2(true);\r\n        }\r\n\r\n        signup(name, email, password, re_password);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"authentication-main\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12 p-0\">\r\n                                <div className=\"auth-innerright\">\r\n\r\n                                    <div className=\"authentication-box\">\r\n\r\n                                        <div className=\"card mt-4\">\r\n                                            {show1 && <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                                                <strong> Oop's something went wrong </strong>\r\n                                                <ol className=\"d-flex flex-column ml-4\">\r\n                                                    Please Make Sure\r\n                                                    <li> This email has not registered before. </li>\r\n                                                    <li> Entered password's are same. </li>\r\n                                                    <li> Email is not similar to Password. </li>\r\n                                                    Refresh the Page and Try again.\r\n                                                </ol>\r\n                                                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={() => setShow1(false)}>\r\n                                                    <span aria-hidden=\"true\">&times;</span>\r\n                                                </button>\r\n                                            </div>}\r\n\r\n                                            {show2 && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                                                A verification link has been sent on <strong> {formData.email} </strong>\r\n                                                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={() => setShow2(false)}>\r\n                                                    <span aria-hidden=\"true\">&times;</span>\r\n                                                </button>\r\n                                            </div>}\r\n\r\n                                            <div className=\"card-body card_css\">\r\n                                                <div className=\"text-center\">\r\n                                                    <h5 className=\"card_head\">Sign Up</h5>\r\n                                                </div>\r\n                                                <form className=\"theme-form\" onSubmit={e => onSubmit(e)}>\r\n\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"name\"> Name: </label>\r\n                                                        <input className=\"form-control\" name=\"name\" placeholder=\"Enter Your Full Name\" value={name} onChange={e => onChange(e)} required />\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"email\"> Email: </label>\r\n                                                        <input className=\"form-control\" name=\"email\" placeholder=\"Enter Your Email Address\" type=\"email\" onChange={e => onChange(e)} value={email} required />\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label> Password: </label>\r\n                                                        <div className=\"d-flex mt-2\">\r\n                                                            <input className=\"form-control\" placeholder=\"Enter Your Password\" onChange={e => onChange(e)} value={password} minLength={8} name=\"password\" type={showPassword ? \"text\" : \"password\"} required />\r\n                                                            <i className=\"far fa-eye m-2\" style={{ cursor : \"pointer\" }} onClick={ () => setShowPassword(!showPassword) }></i>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label> Retype Password: </label>\r\n                                                        <div className=\"d-flex\">\r\n                                                            <input className=\"form-control\" placeholder=\"Re-Enter Your Password\" type={showPassword2 ? \"text\" : \"password\"} minLength={8} onChange={e => onChange(e)} value={re_password} name=\"re_password\" required />\r\n                                                            <i className=\"far fa-eye m-2\" style={{ cursor : \"pointer\" }} onClick={ () => setShowPassword2(!showPassword2) }></i>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group form-row mt-3 mb-0\">\r\n                                                        <button className=\"btn btn-primary btn-block\" type=\"submit\" > Sign Up </button>\r\n                                                    </div>\r\n                                                    <div className=\"login_links text-center\">\r\n                                                        <div className=\"mt-2\"> Are you already a user ?  <Link className=\"btn-link text-capitalize sign_in\" to=\"/login\"> Sign In </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <!-- sign up page ends--> */}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    alreadyExists: state.auth.alreadyExists\r\n})\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","import React, { useState } from 'react';\r\nimport '../assets/custom-stylesheet/login_style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { resetPassword } from '../actions/auth';\r\n\r\nconst ResetPwd = ({ resetPassword }) => {\r\n\r\n    const [show1, setShow1] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        resetPassword(email)\r\n        setShow1(true)\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"container-fluid p-0\">\r\n                    {/* <!-- login page start--> */}\r\n                    <div className=\"authentication-main\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"auth-innerright\">\r\n                                    <div className=\"authentication-box\">\r\n\r\n                                        <div className=\"card mt-4\">\r\n                                            {show1 && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\"> \r\n                                                Password Reset Link has been sent on the provided email address.\r\n                                                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={() => setShow1(false)}>\r\n                                                    <span aria-hidden=\"true\">&times;</span>\r\n                                                </button>\r\n                                            </div>}\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"text-center\">\r\n                                                    <h5 className=\"card_head\"> Forgot Password </h5>\r\n                                                </div>\r\n                                                <form className=\"theme-form\" onSubmit={e => onSubmit(e)}>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"col-form-label pt-0\"> Email </label>\r\n                                                        <input className=\"form-control\" type=\"email\" name=\"email\" value={email}\r\n                                                            onChange={e => onChange(e)} placeholder='Please Enter Your Email' required />\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group form-row mt-3 mb-0\">\r\n                                                        <button className=\"btn btn-primary btn-block\" type=\"submit\"> Reset Password </button>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"login_links text-center\">\r\n                                                        <div className=\"mt-2\"><Link className=\"btn-link text-capitalize sign_in\" to=\"/login\"> Back to Log In </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"login_links text-center\">\r\n                                                        <div className=\"mt-2\"> Don't have an Account ? <Link className=\"btn-link text-capitalize sign_in\" to=\"/signup\"> Sign Up </Link></div>\r\n                                                    </div>\r\n\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { resetPassword })(ResetPwd);","import '../assets/custom-stylesheet/login_style.css';\r\nimport React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../actions/auth';\r\n\r\nconst Activate = ({ verify, match }) => {\r\n\r\n    const [show1, setShow1] = useState(false);\r\n\r\n    const verifyAccount = (e) => {\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token)\r\n        setShow1(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"container-fluid p-0\">\r\n                    {/* <!-- login page start--> */}\r\n                    <div className=\"authentication-main\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"auth-innerright\">\r\n                                    <div className=\"authentication-box\">\r\n\r\n                                        <div className=\"card mt-4\">\r\n                                            {show1 && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                                                Account has been verified. Please close this page and go back to logIn page.\r\n                                                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={() => setShow1(false)}>\r\n                                                    <span aria-hidden=\"true\">&times;</span>\r\n                                                </button>\r\n                                            </div>}\r\n                                            <div className=\"bg_txture\"></div>\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"text-center\">\r\n                                                    <h5 className=\"card_head\"> Verify your Account </h5>\r\n                                                </div>\r\n                                                <form className=\"theme-form\">\r\n\r\n                                                    <div className=\"login_links text-center\">\r\n                                                        <button className=\"btn btn-primary btn-block\" type=\"button\" onClick={verifyAccount}>\r\n                                                            Verify\r\n                                                        </button>\r\n                                                    </div>\r\n\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { verify })(Activate);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { resetPasswordConfirm } from '../actions/auth';\r\n\r\nconst ResetPwdConfirm = ({ resetPasswordConfirm, match }) => {\r\n\r\n    const [show1, setShow1] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        resetPasswordConfirm(uid, token, new_password, re_new_password);\r\n        setShow1(true)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"page-wrapper\">\r\n                <div className=\"container-fluid p-0\">\r\n                    {/* <!-- login page start--> */}\r\n                    <div className=\"authentication-main\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"auth-innerright\">\r\n                                    <div className=\"authentication-box\">\r\n\r\n                                        <div className=\"card mt-4\">\r\n                                            {show1 && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                                                Password has been successfully changed. Please close this page and go back to logIn page.\r\n                                                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={() => setShow1(false)}>\r\n                                                    <span aria-hidden=\"true\">&times;</span>\r\n                                                </button>\r\n                                            </div>}\r\n                                            <div className=\"card-body\">\r\n                                                <div className=\"text-center\">\r\n                                                    <h5 className=\"card_head\"> Confirm Forgot Password </h5>\r\n                                                </div>\r\n                                                <form className=\"theme-form\" onSubmit={e => onSubmit(e)}>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"col-form-label pt-0\"> New Password </label>\r\n                                                        <input className=\"form-control\" type=\"password\" name=\"new_password\" value={new_password}\r\n                                                            onChange={e => onChange(e)} placeholder='Please Enter Your New Password' required />\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"col-form-label pt-0\"> Retype New Password </label>\r\n                                                        <input className=\"form-control\" type=\"password\" name=\"re_new_password\" value={re_new_password}\r\n                                                            onChange={e => onChange(e)} placeholder='Please Re-Enter Your New Password' required />\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group form-row mt-3 mb-0\">\r\n                                                        <button className=\"btn btn-primary btn-block\" type=\"submit\"> Confirm Reset Password </button>\r\n                                                    </div>\r\n\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, { resetPasswordConfirm })(ResetPwdConfirm);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport App from \"./components/app\";\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\n// Import custom Components \r\nimport Dashboard from './components/dashboard/Dashboard';\r\n\r\n// pages \r\nimport SignIn from './pages/login';\r\nimport Signup from './pages/signup';\r\nimport ResetPwd from './pages/resetPwd';\r\nimport Activate from './pages/Activate';\r\nimport ResetPwdConfirm from './pages/ResetPwdConfirm';\r\n\r\nconst Root = () => {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Provider store={store}>\r\n                <BrowserRouter basename={`/`}>\r\n                    <Switch>\r\n\r\n                        <Route path=\"/login\" component={SignIn} />\r\n\r\n                        <Route path=\"/signup\" component={Signup} />\r\n\r\n                        <Route path=\"/reset-password\" component={ResetPwd} />\r\n\r\n                        <Route path=\"/activate/:uid/:token\" component={Activate} />\r\n\r\n                        <Route exact path='/email/reset/confirm/:uid/:token' component={ResetPwdConfirm} />\r\n\r\n                        <App>\r\n                            <Route path=\"/dashboard\" component={Dashboard} />\r\n                        </App>\r\n\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}